<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michelle&#39;s Home</title>
  
  <subtitle>回望来时的路。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jnnjiang.github.io/"/>
  <updated>2019-03-22T01:56:24.000Z</updated>
  <id>https://jnnjiang.github.io/</id>
  
  <author>
    <name>江纳纳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android 学习笔记(1)—TextView 文本样式</title>
    <link href="https://jnnjiang.github.io/2019/03/22/android/TextView/android-learning-notes-1.html"/>
    <id>https://jnnjiang.github.io/2019/03/22/android/TextView/android-learning-notes-1.html</id>
    <published>2019-03-22T01:56:24.000Z</published>
    <updated>2019-03-22T01:56:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Android中，TextView中文本的样式<br>在Android中，TextView是一个非常重要的控件，用于显示文本，通常我们会在XML文件中使用<code>android:text</code>属性来设置文本，也可以在代码中通过调用<code>textView.setText()</code>方法来设置文本，这种方式设置的文本样式默认是使用robot字体的normal样式。有时因为需求，我们需要改变字体的样式，包括颜色、缩放、可点击性，删除线等，有时需要对TextView中所有的文本设置样式，有时只是需要更改其中某些字体的样式，下面针对不同的需要做下总结。</p><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h2><h3 id="整体加粗"><a href="#整体加粗" class="headerlink" title="整体加粗"></a>整体加粗</h3><p>可以使用XML属性、styles、或者themes，也可以使用<code>Spans</code>或<code>HTML</code>标签<br>在XML文件中使用<code>android:textStyle=&quot;bold&quot;</code>属性<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"32sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure></p><p>或在代码中修改<code>Typeface</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myTextView.setTypeface(Typeface.create(myTextView.getTypeface(),Typeface.BOLD));</span><br></pre></td></tr></table></figure></p><p>或在代码中使用<code>StyleSpan</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SpannableString string = <span class="keyword">new</span> SpannableString(<span class="string">"Text with\nBullet point"</span>);</span><br><span class="line">string.setSpan(<span class="keyword">new</span> StyleSpan(Typeface.BOLD),<span class="number">0</span>,string.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">myTextView.setText(string);</span><br></pre></td></tr></table></figure></p><p>或在代码中使用<code>HTML</code>标签<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String textBold = "<span class="tag">&lt;<span class="name">b</span>&gt;</span>text bold<span class="tag">&lt;/<span class="name">b</span>&gt;</span>";</span><br><span class="line">myTextView.setText(Html.fromHtml(textBold));</span><br></pre></td></tr></table></figure></p><h3 id="部分加粗"><a href="#部分加粗" class="headerlink" title="部分加粗"></a>部分加粗</h3><p>可以用<code>HTML</code>标签、<code>Spans</code>或者直接重写TextView的onDraw()方法绘制text。</p><h2 id="单一样式-——-单一样式用于整个TextView中文本"><a href="#单一样式-——-单一样式用于整个TextView中文本" class="headerlink" title="单一样式 —— 单一样式用于整个TextView中文本"></a>单一样式 —— 单一样式用于整个TextView中文本</h2><p>单一样式我们可以通过使用XML属性、styles、或者themes</p><h2 id="使用XML属性"><a href="#使用XML属性" class="headerlink" title="使用XML属性"></a>使用XML属性</h2><p>例如：将字体设为粗体，我们可以使用<code>android:textStyle=&quot;bold&quot;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"32sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多种样式-——-多种样式用于文本、字符或片段等"><a href="#多种样式-——-多种样式用于文本、字符或片段等" class="headerlink" title="多种样式 —— 多种样式用于文本、字符或片段等"></a>多种样式 —— 多种样式用于文本、字符或片段等</h2><p>多种样式可以通过HTML标签、Spans或者自定TextView中text的绘制</p><h2 id="使用HTML标签"><a href="#使用HTML标签" class="headerlink" title="使用HTML标签"></a>使用HTML标签</h2><p>Java：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String text = <span class="string">"My text &lt;ul&gt;&lt;li&gt;bullet one&lt;/li&gt;&lt;li&gt;bullet two&lt;/li&gt;&lt;/ul&gt;"</span>;</span><br><span class="line">myTextView.setText(Html.fromHtml(text));</span><br></pre></td></tr></table></figure></p><p>Kotlin：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> text = <span class="string">"My text &lt;ul&gt;&lt;li&gt;bullet one&lt;/li&gt;&lt;li&gt;bullet two&lt;/li&gt;&lt;/ul&gt;"</span></span><br><span class="line">myTextView.text = Html.fromHtml(text)</span><br></pre></td></tr></table></figure></p><h2 id="使用Spans"><a href="#使用Spans" class="headerlink" title="使用Spans"></a>使用Spans</h2><p>Spans允许你实现多种样式的text<br>例如：您可以利用BulletSpan自定义文本边距、项目符号和项目符号颜色之间的间隙。从android p开始，你甚至可以设置BulletSpan的半径。<br>Java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SpannableString spannable = <span class="keyword">new</span> SpannableString(<span class="string">"My text \nbullet one\nbullet two"</span>);</span><br><span class="line">spannable.setSpan(</span><br><span class="line">    <span class="keyword">new</span> BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">    <span class="comment">/* start index */</span> <span class="number">9</span>, <span class="comment">/* end index */</span> <span class="number">18</span>,</span><br><span class="line">    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">spannable.setSpan(</span><br><span class="line">     <span class="keyword">new</span> BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">     <span class="comment">/* start index */</span> <span class="number">20</span>, <span class="comment">/* end index */</span> spannable.length(),</span><br><span class="line">     Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">myTextView.setText(spannable);</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> spannable = SpannableString(<span class="string">"My text \nbullet one\nbullet two"</span>)</span><br><span class="line">spannable.setSpan(</span><br><span class="line">    BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">    <span class="comment">/* start index */</span> <span class="number">9</span>, <span class="comment">/* end index */</span> <span class="number">18</span>,</span><br><span class="line">    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)</span><br><span class="line">spannable.setSpan(</span><br><span class="line">     BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">     <span class="comment">/* start index */</span> <span class="number">20</span>, <span class="comment">/* end index */</span> spannable.length,</span><br><span class="line">     Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)</span><br><span class="line">myTextView.text = spannable</span><br></pre></td></tr></table></figure></p><p>在Android P中甚至可以设置BulletSpan的半径：<br>Java code：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SpannableString spannable = <span class="keyword">new</span> SpannableString(<span class="string">"My text \nbullet one\nbullet two"</span>);</span><br><span class="line">spannable.setSpan(</span><br><span class="line">    <span class="keyword">new</span> BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">    <span class="comment">/* start index */</span> <span class="number">9</span>, <span class="comment">/* end index */</span> <span class="number">18</span>,</span><br><span class="line">    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">spannable.setSpan(</span><br><span class="line">     <span class="keyword">new</span> BulletSpan(gapWidthPx, accentColor, bulletRadius),</span><br><span class="line">     <span class="comment">/* start index */</span> <span class="number">20</span>, <span class="comment">/* end index */</span> spannable.length(),</span><br><span class="line">     Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">myTextView.setText(spannable);</span><br></pre></td></tr></table></figure></p><p>Kotlin code：<br>Kotlin<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> spannable = SpannableString(<span class="string">"My text \nbullet one\nbullet two"</span>)</span><br><span class="line">spannable.setSpan(</span><br><span class="line">    BulletSpan(gapWidthPx, accentColor),</span><br><span class="line">    <span class="comment">/* start index */</span> <span class="number">9</span>, <span class="comment">/* end index */</span> <span class="number">18</span>,</span><br><span class="line">    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)</span><br><span class="line">spannable.setSpan(</span><br><span class="line">     BulletSpan(gapWidthPx, accentColor, bulletRadius),</span><br><span class="line">     <span class="comment">/* start index */</span> <span class="number">20</span>, <span class="comment">/* end index */</span> spannable.length,</span><br><span class="line">     Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)</span><br><span class="line">myTextView.text = spannable</span><br></pre></td></tr></table></figure></p><h2 id="单一样式和多种样式可以混合使用"><a href="#单一样式和多种样式可以混合使用" class="headerlink" title="单一样式和多种样式可以混合使用"></a>单一样式和多种样式可以混合使用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@color/blue"</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> spannable = SpannableString(“Text styling”)</span><br><span class="line">spannable.setSpan(</span><br><span class="line">     ForegroundColorSpan(Color.PINK), </span><br><span class="line">     <span class="number">0</span>, <span class="number">4</span>, </span><br><span class="line">     Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)</span><br><span class="line">myTextView.text = spannable</span><br></pre></td></tr></table></figure><p>非常好的文章<br><a href="https://medium.com/androiddevelopers/spantastic-text-styling-with-spans-17b0c16b4568" target="_blank" rel="noopener">https://medium.com/androiddevelopers/spantastic-text-styling-with-spans-17b0c16b4568</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Android中，TextView中文本的样式&lt;br&gt;在Android中，TextView是一个非常重要的控件，用于显示文本，通常我们会在XML文件中使用&lt;code&gt;android:text&lt;/code&gt;属性来设置文本，也可以在代码中通过调用&lt;code&gt;textView.
      
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="TextView" scheme="https://jnnjiang.github.io/categories/android/TextView/"/>
    
    
  </entry>
  
  <entry>
    <title>一点想法</title>
    <link href="https://jnnjiang.github.io/2019/03/21/uncategorized/a-little-thought.html"/>
    <id>https://jnnjiang.github.io/2019/03/21/uncategorized/a-little-thought.html</id>
    <published>2019-03-21T08:29:03.000Z</published>
    <updated>2019-03-21T08:29:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近一直忙着整理之前堆积的东西，发现并没有想象中的那么顺利，感觉整理一个点很容易，可是想要扩展到面，把相关的内容都整理出来，还是非常不容易的，这让我突然想到，在开发产品的过程中，往往会发现，产品经理对某些功能定义不全，导致开发不下去的情况，或许并不是不认真或者不专业，只是在那个当下，他只能想到那么多了。现在的我也遇到了同样的问题，写博客时，当我想把所有的情况都考虑进去的时候，发现脑子一下不够用了，似乎怎么想，都觉得不够全面。不知道是不是整理方式的问题，如果不能大而全，那么点对点可好？采用遇到问题解决问题的方式，嗯，决定试试。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近一直忙着整理之前堆积的东西，发现并没有想象中的那么顺利，感觉整理一个点很容易，可是想要扩展到面，把相关的内容都整理出来，还是非常不容易的，这让我突然想到，在开发产品的过程中，往往会发现，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android plurals源码分析</title>
    <link href="https://jnnjiang.github.io/2019/03/21/android/source-code/android-source-plurals.html"/>
    <id>https://jnnjiang.github.io/2019/03/21/android/source-code/android-source-plurals.html</id>
    <published>2019-03-21T06:59:03.000Z</published>
    <updated>2019-03-21T06:59:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于不同语言对数量的语法规则不同，所以引入了plurals这种资源，plurals中quality的值有zero,one,two,few,many,和other，当时我们发现，有时我们定义的有些quality在调用是并不能得到预期的结果，这是因为不是所有的语言都能支持所有的quality值，而在我们调用<code>getQuantityString(@PluralsRes int id, int quantity)</code>方式时，系统是怎么返回的，需要从源码着手去分析。</p><p>我们从Android 8.0中frameworks/base/core/java/android/content/res/Resources.java的代码入手：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@NonNull</span><br><span class="line">public String getQuantityString(@PluralsRes int id, int quantity, Object... formatArgs)</span><br><span class="line">        throws NotFoundException &#123;</span><br><span class="line">    //容易看出，先根据quantity决定要使用的字符串</span><br><span class="line">    String raw = getQuantityText(id, quantity).toString();</span><br><span class="line"></span><br><span class="line">    //再进行占位符的替换工作</span><br><span class="line">    return String.format(mResourcesImpl.getConfiguration().getLocales().get(0), raw,</span><br><span class="line">            formatArgs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@NonNull</span><br><span class="line">public CharSequence getQuantityText(@PluralsRes int id, int quantity)</span><br><span class="line">        throws NotFoundException &#123;</span><br><span class="line">    //依赖于ResourceImpl的实现</span><br><span class="line">    return mResourcesImpl.getQuantityText(id, quantity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>跟进ResourceImpl中的getQuantityText函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CharSequence getQuantityText(@PluralsRes int id, int quantity) throws NotFoundException &#123;</span><br><span class="line">    //得到规则</span><br><span class="line">    PluralRules rule = getPluralRule();</span><br><span class="line"></span><br><span class="line">    //rule.select根据规则，得到quantity对应的QuanitiyCode，即&quot;zero&quot;、&quot;one&quot;、&quot;other&quot;等</span><br><span class="line">    //之后再根据QuanitiyCode，的到具体的资源文件</span><br><span class="line">    CharSequence res = mAssets.getResourceBagText(id,</span><br><span class="line">            attrForQuantityCode(rule.select(quantity)));</span><br><span class="line">    if (res != null) &#123;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //rule没能找到对应的QuanitiyCode时，就用&quot;other&quot;字段的定义</span><br><span class="line">    res = mAssets.getResourceBagText(id, ID_OTHER);</span><br><span class="line">    if (res != null) &#123;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //上面寻找资源文件出问题，就抛出异常</span><br><span class="line">    throw new NotFoundException(&quot;Plural resource ID #0x&quot; + Integer.toHexString(id)</span><br><span class="line">        + &quot; quantity=&quot; + quantity</span><br><span class="line">        + &quot; item=&quot; + rule.select(quantity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里我们首先看一下getPluralRule函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">private PluralRules getPluralRule() &#123;</span><br><span class="line">    synchronized (sSync) &#123;</span><br><span class="line">        if (mPluralRule == null) &#123;</span><br><span class="line">            //单例模式，以Locales的第一个配置来初始化规则，而Locales中的第一个即为当前系统的语言，故和本地化有关。</span><br><span class="line">            mPluralRule = PluralRules.forLocale(mConfiguration.getLocales().get(0));</span><br><span class="line">        &#125;</span><br><span class="line">        return mPluralRule;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>PluralRules的select函数对应的底层实现，不同的Locales应该有不同的实现。</p><p>在此看看attrForQuantityCode：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">private static int attrForQuantityCode(String quantityCode) &#123;</span><br><span class="line">    switch (quantityCode) &#123;</span><br><span class="line">        case PluralRules.KEYWORD_ZERO: return 0x01000005;</span><br><span class="line">        case PluralRules.KEYWORD_ONE:  return 0x01000006;</span><br><span class="line">        case PluralRules.KEYWORD_TWO:  return 0x01000007;</span><br><span class="line">        case PluralRules.KEYWORD_FEW:  return 0x01000008;</span><br><span class="line">        case PluralRules.KEYWORD_MANY: return 0x01000009;</span><br><span class="line">        default:                       return ID_OTHER;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>从上面的代码可以看出，PluralRules的select函数的作用，就是将quantity映射成PluralRules定义的Keyword。<br>然后attrForQuantityCode将Keyword转化成资源文件能识别的标志。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于不同语言对数量的语法规则不同，所以引入了plurals这种资源，plurals中quality的值有zero,one,two,few,many,和other，当时我们发现，有时我们定义的有些quality在调用是并不能得到预期的结果，这是因为不是所有的语言都能支持所有的quality值，而在我们调用&lt;code&gt;getQuantityString(@PluralsRes int id, int quantity)&lt;/code&gt;方式时，系统是怎么返回的，需要从源码着手去分析。&lt;/p&gt;
&lt;p&gt;我们从Android 8.0中frameworks/base/core/java/android/content/res/Resources.java的代码入手：&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="源码分析" scheme="https://jnnjiang.github.io/categories/android/source-code/"/>
    
    
      <category term="plurals" scheme="https://jnnjiang.github.io/tags/plurals/"/>
    
      <category term="本地化" scheme="https://jnnjiang.github.io/tags/%E6%9C%AC%E5%9C%B0%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>android String用法汇总</title>
    <link href="https://jnnjiang.github.io/2019/03/20/android/android-string.html"/>
    <id>https://jnnjiang.github.io/2019/03/20/android/android-string.html</id>
    <published>2019-03-20T15:03:38.000Z</published>
    <updated>2019-03-20T15:03:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="改变部分字符的颜色"><a href="#改变部分字符的颜色" class="headerlink" title="改变部分字符的颜色"></a>改变部分字符的颜色</h1><h2 id="TextSpannable"><a href="#TextSpannable" class="headerlink" title="TextSpannable"></a>TextSpannable</h2><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>有时需要对TextView中的text做局部的样式改变，加粗或斜体等，由于Android可以兼容部分html标签，故可以在res/strings.xml文件中借助html标签去实现，常用的标签如下：</p><blockquote><p><b></b>加粗字体<br><i></i> 斜体字体<br><u></u> 给字体加下划线<br>\n 换行<br>\u0020表示空格<br>\u2026表示省略号</p></blockquote><p>例如我们要给部分字体加粗，可以这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=&quot;text_part_style&quot;&gt;加粗&lt;b&gt;重点&lt;/b&gt;两个字&lt;/string&gt;</span><br></pre></td></tr></table></figure></p><p>然后直接在xml文件中引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:fontFamily=&quot;@font/abril_fatface&quot;</span><br><span class="line">        android:text=&quot;@string/text_part_style&quot;</span><br><span class="line">        android:textSize=&quot;30sp&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>也可以在代码中引用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">textView.setText(Html.fromHtml(&quot;Hello &lt;b&gt;World&lt;/b&gt;,&lt;font size=\&quot;3\&quot; color=\&quot;red\&quot;&gt;AnalysisXmlActivty!&lt;/font&gt;&quot;));</span><br></pre></td></tr></table></figure></p><p>设置类似于html那样的效果。</p><p>有时Android不能很好的区分标签中的<code>&lt;</code>和<code>&gt;</code>，故需要用它们的实体代替<code>&amp;lt;</code>代表<code>&lt;</code>,<code>&amp;gt;</code>代表<code>&gt;</code>.<br>例如设置<code>a&gt;b</code>,<br>html常用实体：<br>|显示结果    |描述    |实体名称    |实体编号|<br>|—|—|—|—|<br>|     |空格    |\&nbsp;    |\&#160;|<br>|&lt;    |小于号    |\&lt;    |\&#60;|<br>|&gt;    |大于号    |\&gt;    |\&#62;|<br>|&amp;    |和号    |\&amp;    |\&#38;|<br>|”    |引号    |\&quot;    |\&#34;|<br>|’    |撇号     |\&apos; (IE不支持)    |\&#39;|<br>|￠    |分（cent）    |\&cent;    |\&#162;|<br>|£    |镑（pound）    |\&pound;    |\&#163;<br>|¥    |元（yen）    |\&yen;    |\&#165;<br>|€    |欧元（euro）    |\&euro;    |\&#8364;<br>|§    |小节    |\&sect;    |\&#167;<br>|©    |版权（copyright）    |\&copy;    |\&#169;<br>|®    |注册商标    |\&reg;    |\&#174;<br>|™    |商标    |\&trade;    |\&#8482;<br>|×    |乘号    |\&times;    |\&#215;<br>|÷    |除号    |\&divide;    |\&#247;</p><h1 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h1><p>Android支持以占位符的方式，定义字符串。<br>这里要先了解%n$d、%n$f和%n$s是和含义<br>举个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=&quot;old&quot;&gt;%1$s今年%2$d岁了&lt;/string&gt;</span><br></pre></td></tr></table></figure></p><p>%1$s:    %1表示第一个可替换的变量 $s表示变量是string型<br>%2$d:   %2表示第二个可替换的变量 $d 表示变量是整型<br>还有一个$f表示的是浮点型，目前android支持者三种类型的变量<br>如果想要在变量前加空格的，拿整型举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=&quot;old&quot;&gt;%1$s今年%2$md岁了&lt;/string&gt;</span><br></pre></td></tr></table></figure></p><p>其中$md 中的m代表m个空格，其它的同理；<br>那么，如何在<string></string>中使用%号呢？<br>有两个办法：</p><ol><li>用%%来表示1个%，和转意符号 \ 的用法相同</li><li>如果你的字符串不需要格式化，可以在你的&lt;string 标签上增加一个属性:formatted=”false”例如 <code>&lt;string name=&quot;test&quot; formatted=&quot;false&quot;&gt;% test %&lt;/string&gt;</code>即可。</li></ol><p>在使用该字符串时，可以在运行时动态替换占位符号，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str =getResources().getString(R.string.old_);</span><br><span class="line">String string = str.format(str, &quot;李小姐&quot;,27);</span><br></pre></td></tr></table></figure></p><h2 id="xliff"><a href="#xliff" class="headerlink" title="xliff"></a>xliff</h2><p>什么是xliff，参见<a href="https://baike.baidu.com/item/XLIFF" target="_blank" rel="noopener">百度百科</a></p><p>在写xliff之前 一定要引用xliff的命名空间,不引用xliff是无效的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources xmlns:xliff=&quot;urn:oasis:names:tc:xliff:document:1.2&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>xliff例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=&quot;old_&quot;&gt;&lt;xliff:g id=&quot;name&quot;&gt;%1$s&lt;/xliff:g&gt;今年&lt;xliff:g id=&quot;age&quot;&gt;%2$d&lt;/xliff:g&gt;岁了&lt;/string&gt;</span><br></pre></td></tr></table></figure></p><p>代码中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str =getResources().getString(R.string.old_);</span><br><span class="line">String string = str.format(str, &quot;李小姐&quot;,27);</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">李小姐今年27岁了</span><br></pre></td></tr></table></figure></p><h2 id="xliff文件和普通文件的区别"><a href="#xliff文件和普通文件的区别" class="headerlink" title="xliff文件和普通文件的区别"></a>xliff文件和普通文件的区别</h2><p>1、具有命名空间xmlns:xliff=”urn:oasis:names:tc:xliff:document:1.2”，这个必须要有。<br>2、在<string>标签中含有<a href="xliff:g" target="_blank" rel="noopener">xliff:g</a>标签。<br><a href="xliff:g" target="_blank" rel="noopener">xliff:g</a>标签介绍：<br>属性id可以随便命名<br>属性example表示举例说明，可以省略<br>%n$ms：代表输出的是字符串，n代表是第几个参数，设置m的值可以在输出之前放置空格<br>%n$md：代表输出的是整数，n代表是第几个参数，设置m的值可以在输出之前放置空格，也可以设为0m,在输出之前放置m个0<br>%n$mf：代表输出的是浮点数，n代表是第几个参数，设置m的值可以控制小数位数，如m=2.2时，输出格式为00.00</string></p><h1 id="plurals"><a href="#plurals" class="headerlink" title="plurals"></a>plurals</h1><p>由于不同的语言对数量的语法规定有不同的规则。 例如一小时是one hour, 两小时是two hours。 为了解决后缀的问题，Android引入了plurals 这种资源。</p><p>android对数量（单复数）进行处理 它支持zero,one,two,few,many,和other;可以理解plurals为一个数量集合的简单资源，它可以通过name的属性来访问（不是xml文件的name）。这样，你可以把plural资源和其他的简单资源一样放在同一个xml 文件里面，在同一个<resoures>节点下。<br>quality的值和描述：</resoures></p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>zero</td><td>当前语言需要特别对待0</td></tr><tr><td>one</td><td>当前语言需要特别对待1</td></tr><tr><td>two</td><td>当前语言需要特别对待2</td></tr><tr><td>few</td><td>当前语言需要特别对待few/small，也就是小数量的</td></tr><tr><td>many</td><td>当前语言需要特别对待many/large，也就是大数量的</td></tr><tr><td>other</td><td>当前语言没有要求对特定资源进行特殊对待</td></tr></tbody></table><p>在工程的values下建一个xml文件 ，或者放在strings文件里也可以:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;resources &gt;</span><br><span class="line">    &lt;plurals name=&quot;hour&quot;&gt;</span><br><span class="line">        &lt;item quantity=&quot;zero&quot;&gt; zero hour &lt;/item&gt;</span><br><span class="line">        &lt;item quantity=&quot;one&quot;&gt; one hour &lt;/item&gt;</span><br><span class="line">        &lt;item quantity=&quot;other&quot;&gt; %d hours &lt;/item&gt;</span><br><span class="line">    &lt;/plurals&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></p><p>name 就是plurals的属性名，其中plurals的Item可以是一个或多个，这就是一个完整的plurals资源文件；（%d代表的是整数）<br>下面是如何使用资源文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Resources res = getResources();</span><br><span class="line">String string =  res.getQuantityString(R.plurals.hour,2,8);</span><br></pre></td></tr></table></figure></p><p>其中，2对应的是quantity=“other”，8对应的是other中占位符的值，也就是几小时。</p><p>getQuantityString()方法介绍：</p><blockquote><p>/**</p><pre><code> * Returns the string necessary for grammatically correct pluralization * of the given resource ID for the given quantity. * Note that the string is selected based solely on grammatical necessity, * and that such rules differ between languages. Do not assume you know which string * will be returned for a given quantity. See * &lt;a href=&quot;{@docRoot}guide/topics/resources/string-resource.html#Plurals&quot;&gt;String Resources&lt;/a&gt; * for more detail. * * @param id The desired resource identifier, as generated by the aapt *           tool. This integer encodes the package, type, and resource *           entry. The value 0 is an invalid identifier. * @param quantity The number used to get the correct string for the current language&apos;s *           plural rules. * * @throws NotFoundException Throws NotFoundException if the given ID does not exist. * * @return String The string data associated with the resource, * stripped of styled text information. */@NonNull**public String getQuantityString(@PluralsRes int id, int quantity) throws NotFoundException {    return getQuantityText(id, quantity).toString();}**/** * Formats the string necessary for grammatically correct pluralization * of the given resource ID for the given quantity, using the given arguments. * Note that the string is selected based solely on grammatical necessity, * and that such rules differ between languages. Do not assume you know which string * will be returned for a given quantity. See * &lt;a href=&quot;{@docRoot}guide/topics/resources/string-resource.html#Plurals&quot;&gt;String Resources&lt;/a&gt; * for more detail. * * &lt;p&gt;Substitution of format arguments works as if using * {@link java.util.Formatter} and {@link java.lang.String#format}. * The resulting string will be stripped of any styled text information. * * @param id The desired resource identifier, as generated by the aapt *           tool. This integer encodes the package, type, and resource *           entry. The value 0 is an invalid identifier. * @param quantity The number used to get the correct string for the current language&apos;s *           plural rules. * @param formatArgs The format arguments that will be used for substitution. * * @throws NotFoundException Throws NotFoundException if the given ID does not exist. * * @return String The string data associated with the resource, * stripped of styled text information. */@NonNull**public String getQuantityString(@PluralsRes int id, int quantity, Object... formatArgs)        throws NotFoundException {}**</code></pre></blockquote><p>int id，是我们在string.xml里面写的plurals资源的id;int quantity，是数量的意思，也就是我们取具体item的判断依据,Object… formatArgs参数是占位符的值</p><p>但是当我们把quantity的值设为0时，程序并没有像我们期望的那样显示<code>zero hour</code>，这是因为程序运行的时候，具体取的那个item，是取决于当前语言对单复数等形式的定义的。具体可以参见<a href="https://jnnjiang.github.io/2019/03/21/android/source-code/android-source-plurals.html">Android plurals源码分析</a>;</p><p>如果非要在英文中特殊处理<code>zero</code>的情况，可以借助下面要讲的<code>MessageFormat</code></p><h1 id="MessageFormat"><a href="#MessageFormat" class="headerlink" title="MessageFormat"></a>MessageFormat</h1><p>1.在strings.xml文件中定义hour如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=&quot;hour&quot;&gt;&#123;0,choice,0#zero hour|1#One hour|1&lt;&#123;0&#125; hours&#125;&lt;/string&gt;</span><br></pre></td></tr></table></figure></p><p>2.在代码中引用hour<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String hour = MessageFormat.format(getSherlockActivity().getString(R.string.hour), number)</span><br></pre></td></tr></table></figure></p><p>更多的例子：<br>例1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">double[] filelimits = &#123;0,1,2&#125;;</span><br><span class="line"> String[] filepart = &#123;&quot;are no files&quot;,&quot;is one file&quot;,&quot;are &#123;2&#125; files&quot;&#125;;</span><br><span class="line"> ChoiceFormat fileform = new ChoiceFormat(filelimits, filepart);</span><br><span class="line"> Format[] testFormats = &#123;fileform, null, NumberFormat.getInstance()&#125;;</span><br><span class="line"> MessageFormat pattform = new MessageFormat(&quot;There &#123;0&#125; on &#123;1&#125;&quot;);</span><br><span class="line"> pattform.setFormats(testFormats);</span><br><span class="line"> Object[] testArgs = &#123;null, &quot;ADisk&quot;, null&#125;;</span><br><span class="line"> for (int i = 0; i &lt; 4; ++i) &#123;</span><br><span class="line">     testArgs[0] = new Integer(i);</span><br><span class="line">     testArgs[2] = testArgs[0];</span><br><span class="line">     System.out.println(pattform.format(testArgs));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p> 例2：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ChoiceFormat fmt = new ChoiceFormat(</span><br><span class="line">     &quot;-1#is negative| 0#is zero or fraction | 1#is one |1.0&lt;is 1+ |2#is two |2&lt;is more than 2.&quot;);</span><br><span class="line">System.out.println(&quot;Formatter Pattern : &quot; + fmt.toPattern());</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;Format with -INF : &quot; + fmt.format(Double.NEGATIVE_INFINITY));</span><br><span class="line">System.out.println(&quot;Format with -1.0 : &quot; + fmt.format(-1.0));</span><br><span class="line">System.out.println(&quot;Format with 0 : &quot; + fmt.format(0));</span><br><span class="line">System.out.println(&quot;Format with 0.9 : &quot; + fmt.format(0.9));</span><br><span class="line">System.out.println(&quot;Format with 1.0 : &quot; + fmt.format(1));</span><br><span class="line">System.out.println(&quot;Format with 1.5 : &quot; + fmt.format(1.5));</span><br><span class="line">System.out.println(&quot;Format with 2 : &quot; + fmt.format(2));</span><br><span class="line">System.out.println(&quot;Format with 2.1 : &quot; + fmt.format(2.1));</span><br><span class="line">System.out.println(&quot;Format with NaN : &quot; + fmt.format(Double.NaN));</span><br><span class="line">System.out.println(&quot;Format with +INF : &quot; + fmt.format(Double.POSITIVE_INFINITY));</span><br></pre></td></tr></table></figure></p><p>关于MessageFormat的详细用法可以参见Java的API：<a href="https://docs.oracle.com/javase/8/docs/api/java/text/MessageFormat.html" target="_blank" rel="noopener">MessageFormat</a>或<a href="http://vence.github.io/2016/04/29/javamethod-messageformat/" target="_blank" rel="noopener">Java中MessageFormat的使用</a><br>更多string的用法，可以参见<a href="https://www.cnblogs.com/meiyitian/articles/2221742.html" target="_blank" rel="noopener">android String 资源 你所不知道的</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;改变部分字符的颜色&quot;&gt;&lt;a href=&quot;#改变部分字符的颜色&quot; class=&quot;headerlink&quot; title=&quot;改变部分字符的颜色&quot;&gt;&lt;/a&gt;改变部分字符的颜色&lt;/h1&gt;&lt;h2 id=&quot;TextSpannable&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
    
      <category term="String" scheme="https://jnnjiang.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>android 字体加载流程分析</title>
    <link href="https://jnnjiang.github.io/2019/03/20/android/source-code/android-source-font-loading.html"/>
    <id>https://jnnjiang.github.io/2019/03/20/android/source-code/android-source-font-loading.html</id>
    <published>2019-03-20T14:55:40.000Z</published>
    <updated>2019-03-20T14:55:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/a282255307/article/details/76870441" target="_blank" rel="noopener">https://blog.csdn.net/a282255307/article/details/76870441</a><br>文章中分析的和Android O源码并不匹配，需要具体看看5.0和8.0源码之间的差别<br><a href="https://blog.csdn.net/xiao_nian/article/details/60766475" target="_blank" rel="noopener">https://blog.csdn.net/xiao_nian/article/details/60766475</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/a282255307/article/details/76870441&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/a282255307/artic
      
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="源码分析" scheme="https://jnnjiang.github.io/categories/android/source-code/"/>
    
    
      <category term="字体" scheme="https://jnnjiang.github.io/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>android Font,Typeface,FontFamily之间的差别</title>
    <link href="https://jnnjiang.github.io/2019/03/20/android/font/android-difference-between-font-typeface-and-fontfamily.html"/>
    <id>https://jnnjiang.github.io/2019/03/20/android/font/android-difference-between-font-typeface-and-fontfamily.html</id>
    <published>2019-03-20T14:36:47.000Z</published>
    <updated>2019-03-20T14:36:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Font和Typeface经常被错误的互换使用。然而它们之间却是有一些不同的。</p><h1 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h1><p>大约在十五世纪，当打印机手工打字时，他们必须从一个巨大的盒子里拿出真正的金属字母、数字和符号。如下图：<br><img src="https://mindgruve.com/wp/wp-content/uploads/2013/05/xmetal-font-box.jpg.pagespeed.ic.KY10H3va6i.webp" alt="图1"><br>图1</p><p>这个收集字符的容器可以被叫做<code>Font</code><br>现在，<code>font</code>指的是包含各种字体的数字文件，而不是一盒金属字体。<br><a id="more"></a></p><h1 id="Typeface"><a href="#Typeface" class="headerlink" title="Typeface"></a>Typeface</h1><p><img src="https://mindgruve.com/wp/wp-content/uploads/2013/05/xnews-gothic-2.png.pagespeed.ic.MInj5TZxF_.webp" alt="图2"><br>图2</p><p>Typeface描述了字体中包含的字符的整体外观。如图2是一种New Gothic字体（Font）。</p><blockquote><p>你可能有一个容器装的是News Gothic字体，有一个容器装的是News Gothic Bold字体，一个容器装News Gothic Light字体，每个容器里都是一种News Gothic字体。<br>它们只是拥有不同的厚度（weight），但其定义的特征仍然是相同的。</p></blockquote><p>下图或许可以很好的解释Typeface：<br><img src="https://mindgruve.com/wp/wp-content/uploads/2013/05/xsmith-font-family-2.png.pagespeed.ic.Nr7dxeCJM0.webp" alt="图3"><br>图3</p><p><code>typeface</code>通常可以和<code>font family</code>互换。再举个例子：</p><blockquote><p>一个家庭有三胞胎：John Smith, Jack Smith, and Tom Smith。他们拥有相同的样貌，但是体重（weight）不同：一个瘦点儿，另一个胖点儿。他们一起组成了<code>Smith family</code>。</p></blockquote><p>在印刷术上，John，Jack，Tom代表着不同的字体，但是他们一起组成了<code>Smith Typeface</code></p><h1 id="Font-Family"><a href="#Font-Family" class="headerlink" title="Font Family"></a>Font Family</h1><p>在Android中，<code>font family</code>是一组相关字体的集体，例如Arial字体，那么<code>font family</code>将包含<code>Arial regular</code>，<code>Arial Bold</code>，<code>Arial Itatic</code>，<code>Arial Bold Itatic</code>，<code>Arial Black</code>等字体。</p><p>总之：<code>typeface</code>是一种设计，<code>font</code>是一个文件，<code>font family</code>是一个相关字体的文件集合。</p><p>参考：<br><a href="https://mindgruve.com/blog/advertising/typeface-vs-font-what-is-the-difference" target="_blank" rel="noopener">Typeface vs Font: What’s the Difference?</a><br><a href="https://www.howtogeek.com/325644/whats-the-difference-between-a-font-a-typeface-and-a-font-family/" target="_blank" rel="noopener">What’s the Difference Between a Font, a Typeface, and a Font Family?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;Font和Typeface经常被错误的互换使用。然而它们之间却是有一些不同的。&lt;/p&gt;
&lt;h1 id=&quot;Font&quot;&gt;&lt;a href=&quot;#Font&quot; class=&quot;headerlink&quot; title=&quot;Font&quot;&gt;&lt;/a&gt;Font&lt;/h1&gt;&lt;p&gt;大约在十五世纪，当打印机手工打字时，他们必须从一个巨大的盒子里拿出真正的金属字母、数字和符号。如下图：&lt;br&gt;&lt;img src=&quot;https://mindgruve.com/wp/wp-content/uploads/2013/05/xmetal-font-box.jpg.pagespeed.ic.KY10H3va6i.webp&quot; alt=&quot;图1&quot;&gt;&lt;br&gt;图1&lt;/p&gt;
&lt;p&gt;这个收集字符的容器可以被叫做&lt;code&gt;Font&lt;/code&gt;&lt;br&gt;现在，&lt;code&gt;font&lt;/code&gt;指的是包含各种字体的数字文件，而不是一盒金属字体。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="字体" scheme="https://jnnjiang.github.io/categories/android/font/"/>
    
    
      <category term="字体" scheme="https://jnnjiang.github.io/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>android O 在xml文件中引用字体</title>
    <link href="https://jnnjiang.github.io/2019/03/20/android/font/android-o-font-in-xml.html"/>
    <id>https://jnnjiang.github.io/2019/03/20/android/font/android-o-font-in-xml.html</id>
    <published>2019-03-20T08:23:02.000Z</published>
    <updated>2019-03-20T08:23:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Android 8.0（API 26 Oreo）引入了可以在xml文件中配置字体的新功能，在这之前，如果要改变字体样式，需要将字体文件放入Asset文件中，并在代码代码中通过getAsset()的方式，动态改变字体的样式。如果想在4.1（API 16）及更高的版本上使用该功能，需要引用Support Library 26.</p><h1 id="Android-O在xml文件中配置字体"><a href="#Android-O在xml文件中配置字体" class="headerlink" title="Android O在xml文件中配置字体"></a>Android O在xml文件中配置字体</h1><h2 id="本地字体"><a href="#本地字体" class="headerlink" title="本地字体"></a>本地字体</h2><h3 id="直接在xml文件中引用字体"><a href="#直接在xml文件中引用字体" class="headerlink" title="直接在xml文件中引用字体"></a>直接在xml文件中引用字体</h3><p>1.在<code>res/</code>文件夹下创建<code>font</code>文件夹，并将字体文件拷到<code>font</code>文件夹下，假设字体文件为：<code>myfont.otf</code><br>2.在xml文件中通过<code>android:fontFamily</code>属性引用自定义的字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;Text View&quot;</span><br><span class="line">        android:fontFamily=&quot;@font/myfont&quot;/&gt;</span><br></pre></td></tr></table></figure></p><p>注：font文件名字只能由小写字母a-z，0-9，下划线_组成。<br><a id="more"></a></p><h3 id="创建font-family"><a href="#创建font-family" class="headerlink" title="创建font family"></a>创建font family</h3><p>字体系列是一组字体文件及其样式和权重详细信息。在Android中，您可以创建一个新的字体系列作为XML资源，并将其作为单个单元访问，而不是将每个样式和权重作为单独的资源引用。通过这样做，系统可以根据您尝试使用的文本样式选择正确的字体。（这里有个疑问，系统是怎么匹配字体的？？？）<br>1.在<code>res/font/</code>路径下，右键新建资源文件<code>lobster.xml</code><br>2.打开此xml文件定义该字体的所有不同版本，以及其样式和权重属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;font-family xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class="line">    &lt;font</span><br><span class="line">        android:fontStyle=&quot;normal&quot;</span><br><span class="line">        android:fontWeight=&quot;400&quot;</span><br><span class="line">        android:font=&quot;@font/lobster_regular&quot; /&gt;</span><br><span class="line">    &lt;font</span><br><span class="line">        android:fontStyle=&quot;italic&quot;</span><br><span class="line">        android:fontWeight=&quot;400&quot;</span><br><span class="line">        android:font=&quot;@font/lobster_italic&quot; /&gt;</span><br><span class="line">&lt;/font-family&gt;</span><br></pre></td></tr></table></figure></p><p>注：<code>android:fontWeight</code>的值是正数，且是100的倍数，在100和900之间，一般 用400表示regular，700表示bold。<br>2.然后在xml文件像引用普通字体一样引用字体文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:fontFamily=&quot;@font/lobster&quot;/&gt;</span><br></pre></td></tr></table></figure></p><h3 id="把font添加到style文件中"><a href="#把font添加到style文件中" class="headerlink" title="把font添加到style文件中"></a>把font添加到style文件中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style name=&quot;MyTextAppearance&quot; parent=&quot;@android:style/TextAppearance.Small&quot;&gt;</span><br><span class="line">    &lt;item name=&quot;android:fontFamily&quot;&gt;@font/lobster&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="在代码中使用font"><a href="#在代码中使用font" class="headerlink" title="在代码中使用font"></a>在代码中使用font</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Typeface typeface = getResources().getFont(R.font.myfont);</span><br><span class="line">textView.setTypeface(typeface);</span><br></pre></td></tr></table></figure><h3 id="利用Support-Library兼容至版本4-1版本（兼容到API-14，因为android-fontFamily是Android-4-1版本引入的）"><a href="#利用Support-Library兼容至版本4-1版本（兼容到API-14，因为android-fontFamily是Android-4-1版本引入的）" class="headerlink" title="利用Support Library兼容至版本4.1版本（兼容到API 14，因为android:fontFamily是Android 4.1版本引入的）"></a>利用Support Library兼容至版本4.1版本（兼容到API 14，因为android:fontFamily是Android 4.1版本引入的）</h3><ol><li><p>在<code>app/build.gragle</code>添加dependencies：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &apos;com.android.support:appcompat-v7:26.0.0&apos;</span><br></pre></td></tr></table></figure></li><li><p>创建font family文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;font-family xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;</span><br><span class="line">    &lt;font app:fontStyle=&quot;normal&quot; app:fontWeight=&quot;400&quot; app:font=&quot;@font/myfont-Regular&quot;/&gt;</span><br><span class="line">    &lt;font app:fontStyle=&quot;italic&quot; app:fontWeight=&quot;400&quot; app:font=&quot;@font/myfont-Italic&quot; /&gt;</span><br><span class="line">&lt;/font-family&gt;</span><br></pre></td></tr></table></figure></li></ol><p>注：需要用到app属性</p><ol start="3"><li>字体的引用同系统API</li><li>在代码中引用字体<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Typeface typeface = ResourcesCompat.getFont(context, R.font.myfont);</span><br></pre></td></tr></table></figure></li></ol><p>主要需要用到ResourcesCompat类。</p><h3 id="4-1之前的版本自定义字体（只能通过代码引用）"><a href="#4-1之前的版本自定义字体（只能通过代码引用）" class="headerlink" title="4.1之前的版本自定义字体（只能通过代码引用）"></a>4.1之前的版本自定义字体（只能通过代码引用）</h3><p>1.在项目根目录下，新建<code>assets/fonts/</code>文件夹<br>2.将字体拷贝至文件夹下<br>3.在代码中引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Typeface tf = Typeface.createFromAsset(getContext().getAssets(), &quot;fonts/myfont.ttf&quot;); </span><br><span class="line">TextViev textView = findViewById(R.id.textview);</span><br><span class="line">textView.setTypeface(tf);</span><br></pre></td></tr></table></figure></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>鉴于以上两种情况，font family文件可以定义成兼容模式（由于现在兼容到4.1版本已经可以覆盖所有的设备，故不再考虑4.1之前的版本）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;font-family </span><br><span class="line">xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;</span><br><span class="line">&lt;font</span><br><span class="line">        android:fontStyle=&quot;normal&quot;</span><br><span class="line">        android:fontWeight=&quot;400&quot;</span><br><span class="line">        android:font=&quot;@font/lobster_regular&quot;</span><br><span class="line">        app:fontStyle=&quot;normal&quot;</span><br><span class="line">        app:fontWeight=&quot;400&quot;</span><br><span class="line">        app:font=&quot;@font/lobster_regular&quot; /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;font</span><br><span class="line">        android:fontStyle=&quot;italic&quot;</span><br><span class="line">        android:fontWeight=&quot;400&quot;</span><br><span class="line">        android:font=&quot;@font/lobster_italic&quot;</span><br><span class="line">        app:fontStyle=&quot;italic&quot;</span><br><span class="line">        app:fontWeight=&quot;400&quot;</span><br><span class="line">        app:font=&quot;@font/lobster_italic&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/font-family&gt;</span><br></pre></td></tr></table></figure></p><h2 id="在线字体"><a href="#在线字体" class="headerlink" title="在线字体"></a>在线字体</h2><h3 id="静态配置"><a href="#静态配置" class="headerlink" title="静态配置"></a>静态配置</h3><p>打开 <code>app/src/main/res/layout/activity_main.xml</code><br>选择 <code>Design</code> 面板<br>在 <code>Component Tree</code> 面板中, 打开 textview<br>在 <code>Attributes</code> 面板中, 打开 fontFamily 下拉列表并选择 More Fonts… （你可能需要点击 <code>View all attributes</code>才能看到 fontFamily）<br>选择字体家族 eg.<code>Adamina</code><br>选择字体样式 eg.<code>Regular</code><br>勾选<code>Create downloadable font</code>（如果勾选<code>add font to project</code>，字体将直接被下载到<code>res/font/</code>下）<br>点击OK，此时在<code>res/font/</code>下就会有我们想下载的字体。</p><p>此时我们的项目会有如下变化</p><ol><li>res/font/下多了Adamina.xml文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;font-family xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">        app:fontProviderAuthority=&quot;com.google.android.gms.fonts&quot;</span><br><span class="line">        app:fontProviderPackage=&quot;com.google.android.gms&quot;</span><br><span class="line">        app:fontProviderQuery=&quot;Adamina&quot;</span><br><span class="line">        app:fontProviderCerts=&quot;@array/com_google_android_gms_fonts_certs&quot;&gt;</span><br><span class="line">&lt;/font-family&gt;</span><br></pre></td></tr></table></figure></li></ol><p><font color="#f00">app:fontProviderFetchStrategy=”blocking” 属性的作用？？？</font></p><ol start="2"><li><code>res/values/</code>下增加了<code>font_certs.xml</code>和<code>preloaded_fonts.xml</code><br><strong>font_certs.xml</strong>:字体提供程序的签名<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;array name=&quot;com_google_android_gms_fonts_certs&quot;&gt;</span><br><span class="line">        &lt;item&gt;@array/com_google_android_gms_fonts_certs_dev&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;@array/com_google_android_gms_fonts_certs_prod&lt;/item&gt;</span><br><span class="line">    &lt;/array&gt;</span><br><span class="line">    &lt;string-array name=&quot;com_google_android_gms_fonts_certs_dev&quot;&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            MIIEqDCCA5CgAwIBAgIJANWFuGx90071MA0GCSqGSIb3DQEBBAUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTAeFw0wODA0MTUyMzM2NTZaFw0zNTA5MDEyMzM2NTZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBANbOLggKv+IxTdGNs8/TGFy0PTP6DHThvbbR24kT9ixcOd9W+EaBPWW+wPPKQmsHxajtWjmQwWfna8mZuSeJS48LIgAZlKkpFeVyxW0qMBujb8X8ETrWy550NaFtI6t9+u7hZeTfHwqNvacKhp1RbE6dBRGWynwMVX8XW8N1+UjFaq6GCJukT4qmpN2afb8sCjUigq0GuMwYXrFVee74bQgLHWGJwPmvmLHC69EH6kWr22ijx4OKXlSIx2xT1AsSHee70w5iDBiK4aph27yH3TxkXy9V89TDdexAcKk/cVHYNnDBapcavl7y0RiQ4biu8ymM8Ga/nmzhRKya6G0cGw8CAQOjgfwwgfkwHQYDVR0OBBYEFI0cxb6VTEM8YYY6FbBMvAPyT+CyMIHJBgNVHSMEgcEwgb6AFI0cxb6VTEM8YYY6FbBMvAPyT+CyoYGapIGXMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbYIJANWFuGx90071MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADggEBABnTDPEF+3iSP0wNfdIjIz1AlnrPzgAIHVvXxunW7SBrDhEglQZBbKJEk5kT0mtKoOD1JMrSu1xuTKEBahWRbqHsXclaXjoBADb0kkjVEJu/Lh5hgYZnOjvlba8Ld7HCKePCVePoTJBdI4fvugnL8TsgK05aIskyY0hKI9L8KfqfGTl1lzOv2KoWD0KWwtAWPoGChZxmQ+nBli+gwYMzM1vAkP+aayLe0a1EQimlOalO762r0GXO0ks+UeXde2Z4e+8S/pf7pITEI/tP+MxJTALw9QUWEv9lKTk+jkbqxbsh8nfBUapfKqYn0eidpwq2AzVp3juYl7//fKnaPhJD9gs=</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">    &lt;/string-array&gt;</span><br><span class="line">    &lt;string-array name=&quot;com_google_android_gms_fonts_certs_prod&quot;&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            MIIEQzCCAyugAwIBAgIJAMLgh0ZkSjCNMA0GCSqGSIb3DQEBBAUAMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDAeFw0wODA4MjEyMzEzMzRaFw0zNjAxMDcyMzEzMzRaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAKtWLgDYO6IIrgqWbxJOKdoR8qtW0I9Y4sypEwPpt1TTcvZApxsdyxMJZ2JORland2qSGT2y5b+3JKkedxiLDmpHpDsz2WCbdxgxRczfey5YZnTJ4VZbH0xqWVW/8lGmPav5xVwnIiJS6HXk+BVKZF+JcWjAsb/GEuq/eFdpuzSqeYTcfi6idkyugwfYwXFU1+5fZKUaRKYCwkkFQVfcAs1fXA5V+++FGfvjJ/CxURaSxaBvGdGDhfXE28LWuT9ozCl5xw4Yq5OGazvV24mZVSoOO0yZ31j7kYvtwYK6NeADwbSxDdJEqO4k//0zOHKrUiGYXtqw/A0LFFtqoZKFjnkCAQOjgdkwgdYwHQYDVR0OBBYEFMd9jMIhF1Ylmn/Tgt9r45jk14alMIGmBgNVHSMEgZ4wgZuAFMd9jMIhF1Ylmn/Tgt9r45jk14aloXikdjB0MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLR29vZ2xlIEluYy4xEDAOBgNVBAsTB0FuZHJvaWQxEDAOBgNVBAMTB0FuZHJvaWSCCQDC4IdGZEowjTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4IBAQBt0lLO74UwLDYKqs6Tm8/yzKkEu116FmH4rkaymUIE0P9KaMftGlMexFlaYjzmB2OxZyl6euNXEsQH8gjwyxCUKRJNexBiGcCEyj6z+a1fuHHvkiaai+KL8W1EyNmgjmyy8AW7P+LLlkR+ho5zEHatRbM/YAnqGcFh5iZBqpknHf1SKMXFh4dd239FJ1jWYfbMDMy3NS5CTMQ2XFI1MvcyUTdZPErjQfTbQe3aDQsQcafEQPD+nqActifKZ0Np0IS9L9kR/wbNvyz6ENwPiTrjV2KRkEjH78ZMcUQXg0L3BYHJ3lc69Vs5Ddf9uUGGMYldX3WfMBEmh/9iFBDAaTCK</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">    &lt;/string-array&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></li></ol><p><strong>preloaded_fonts.xml</strong>:在安装和更新过程中加载的字体列表，以确保这些字体在启动应用程序时可用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;array name=&quot;preloaded_fonts&quot; translatable=&quot;false&quot;&gt;</span><br><span class="line">        &lt;item&gt;@font/adamina&lt;/item&gt;</span><br><span class="line">    &lt;/array&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></p><ol start="3"><li>AndroidManifest.xml文件中增加字体的meta-data信息 (<font color="#f00">meta-data信息的作用？？？？</font>)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta-data</span><br><span class="line">           android:name=&quot;preloaded_fonts&quot;</span><br><span class="line">           android:resource=&quot;@array/preloaded_fonts&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="动态加载"><a href="#动态加载" class="headerlink" title="动态加载"></a>动态加载</h3><ol><li><p>我们需要一个线程等待字体，声明一个变量以保存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private Handler fontHandler;</span><br></pre></td></tr></table></figure></li><li><p>添加一个 Method 来管理字体处理线程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private Handler getFontHandlerThread() &#123;</span><br><span class="line">   if (fontHandler == null) &#123;</span><br><span class="line">       HandlerThread handlerThread = new HandlerThread(&quot;fonts&quot;);</span><br><span class="line">       handlerThread.start();</span><br><span class="line">       fontHandler = new Handler(handlerThread.getLooper());</span><br><span class="line">   &#125;</span><br><span class="line">   return fontHandler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加一个 Method 将 Typeface (参考 ) 应用于 Toolbar：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private void styleToolbar(Typeface typeface) &#123;</span><br><span class="line">   // this is gross but toolbar doesn&apos;t expose it&apos;s children</span><br><span class="line">   for (int i = 0; i &lt; toolbar.getChildCount(); i++) &#123;</span><br><span class="line">       View rawView = toolbar.getChildAt(i);</span><br><span class="line">       if (!(rawView instanceof TextView)) &#123;</span><br><span class="line">           continue;</span><br><span class="line">       &#125;</span><br><span class="line">TextView textView = (TextView) rawView;</span><br><span class="line">       textView.setTypeface(typeface);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 onCreate 中，从字体提供程序启动异步获取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">  ...</span><br><span class="line">   FontRequest fontRequest = new FontRequest(&quot;com.google.android.gms.fonts&quot;,</span><br><span class="line">           &quot;com.google.android.gms&quot;,</span><br><span class="line">           &quot;name=Adamina&quot;,</span><br><span class="line">           R.array.font_certs);</span><br><span class="line">   FontsContractCompat.FontRequestCallback toolbarFontCallback =</span><br><span class="line">           new FontsContractCompat.FontRequestCallback() &#123;</span><br><span class="line">               @Override public void onTypefaceRetrieved(Typeface typeface) &#123;</span><br><span class="line">                   // If we got our font apply it to the toolbar</span><br><span class="line">                   styleToolbar(typeface);</span><br><span class="line">               &#125;</span><br><span class="line">               @Override public void onTypefaceRequestFailed(int reason) &#123;</span><br><span class="line">                   Log.w(TAG, &quot;Failed to fetch Toolbar font: &quot; + reason);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;;</span><br><span class="line">  </span><br><span class="line">   // Start async fetch on the handler thread</span><br><span class="line">   FontsContractCompat.requestFont(this, fontRequest, toolbarFontCallback,</span><br><span class="line">           getFontHandlerThread());</span><br></pre></td></tr></table></figure></li></ol><p>关于字体，想了解更多的，可以查看<a href="https://jnnjiang.github.io/2019/03/18/android/font/android-font.html">Android 字体</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;Android 8.0（API 26 Oreo）引入了可以在xml文件中配置字体的新功能，在这之前，如果要改变字体样式，需要将字体文件放入Asset文件中，并在代码代码中通过getAsset()的方式，动态改变字体的样式。如果想在4.1（API 16）及更高的版本上使用该功能，需要引用Support Library 26.&lt;/p&gt;
&lt;h1 id=&quot;Android-O在xml文件中配置字体&quot;&gt;&lt;a href=&quot;#Android-O在xml文件中配置字体&quot; class=&quot;headerlink&quot; title=&quot;Android O在xml文件中配置字体&quot;&gt;&lt;/a&gt;Android O在xml文件中配置字体&lt;/h1&gt;&lt;h2 id=&quot;本地字体&quot;&gt;&lt;a href=&quot;#本地字体&quot; class=&quot;headerlink&quot; title=&quot;本地字体&quot;&gt;&lt;/a&gt;本地字体&lt;/h2&gt;&lt;h3 id=&quot;直接在xml文件中引用字体&quot;&gt;&lt;a href=&quot;#直接在xml文件中引用字体&quot; class=&quot;headerlink&quot; title=&quot;直接在xml文件中引用字体&quot;&gt;&lt;/a&gt;直接在xml文件中引用字体&lt;/h3&gt;&lt;p&gt;1.在&lt;code&gt;res/&lt;/code&gt;文件夹下创建&lt;code&gt;font&lt;/code&gt;文件夹，并将字体文件拷到&lt;code&gt;font&lt;/code&gt;文件夹下，假设字体文件为：&lt;code&gt;myfont.otf&lt;/code&gt;&lt;br&gt;2.在xml文件中通过&lt;code&gt;android:fontFamily&lt;/code&gt;属性引用自定义的字体&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;TextView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/textView&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:text=&amp;quot;Text View&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:fontFamily=&amp;quot;@font/myfont&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：font文件名字只能由小写字母a-z，0-9，下划线_组成。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="字体" scheme="https://jnnjiang.github.io/categories/android/font/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown教程</title>
    <link href="https://jnnjiang.github.io/2019/03/20/Markdown/Markdown.html"/>
    <id>https://jnnjiang.github.io/2019/03/20/Markdown/Markdown.html</id>
    <published>2019-03-20T04:34:54.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><a id="more"></a><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- 链接：[title](url)</span><br><span class="line">- 加粗：**文本**</span><br><span class="line">- 斜体：*ABC*</span><br><span class="line">- 高亮：==高亮==</span><br><span class="line">- 段落：段落之间空一行</span><br><span class="line">- 换行符：一行结束时输入两个空格</span><br><span class="line">- 列表：</span><br><span class="line">    - 无序列表</span><br><span class="line">    - 有序列表</span><br><span class="line">- 引用： &gt;引用内容</span><br><span class="line">- 内嵌代码：`code`</span><br><span class="line">- 分割线：---或***或===</span><br><span class="line">- 方框： - [ ] -</span><br></pre></td></tr></table></figure><ul><li>链接：<a href="url">title</a></li><li>加粗：<strong>文本</strong></li><li>斜体：<em>ABC</em></li><li>粗斜体：<strong><em>粗斜体文本</em></strong></li><li>高亮：==高亮==</li><li>段落：段落之间空一行</li><li>换行符：一行结束时输入两个空格</li><li>列表：<ul><li>无序列表</li><li>有序列表</li></ul></li><li>引用： &gt;引用内容</li><li>内嵌代码：<code>code</code></li><li>分割线：—-或<em>**</em>或===</li><li>方框：- [ ] -</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>数字不能省略但可无序，点号之后的空格不能少<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br><span class="line">5. 第五项</span><br><span class="line">4. 第四项</span><br></pre></td></tr></table></figure></p><ol><li>第一项</li><li>第二项</li><li>第三项</li><li>第五项</li><li>第四项</li></ol><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br><span class="line">- 无序列表</span><br></pre></td></tr></table></figure></p><ul><li>无序列表</li><li>无序列表</li><li>无序列表</li><li><p>无序列表</p><h2 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h2><p>-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少</p><h3 id="无序嵌套"><a href="#无序嵌套" class="headerlink" title="无序嵌套"></a>无序嵌套</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 第一层</span><br><span class="line">    * 第二层</span><br><span class="line">        + 第三层</span><br></pre></td></tr></table></figure></li><li><p>第一层</p><ul><li>第二层<ul><li>第三层</li></ul></li></ul></li></ul><h3 id="有序无序混套"><a href="#有序无序混套" class="headerlink" title="有序无序混套"></a>有序无序混套</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 有序</span><br><span class="line">    - 无序列表</span><br><span class="line">        + 无序列表</span><br><span class="line">2. 有序</span><br><span class="line">4. 有序</span><br></pre></td></tr></table></figure><ol><li>有序<ul><li>无序列表<ul><li>无序列表</li></ul></li></ul></li><li>有序</li><li>有序</li></ol><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>括号内的url可以是网络路径，也可以是本地路径。本地路径可以是绝对路径，也可以是相对路径，最好取相对路径。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片描述（可省略）](url)</span><br></pre></td></tr></table></figure></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或更多-_*，必须单独一行，可含空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">___</span><br><span class="line">***</span><br></pre></td></tr></table></figure></p><hr><hr><hr><p>##代码</p><h3 id="内嵌代码"><a href="#内嵌代码" class="headerlink" title="内嵌代码"></a>内嵌代码</h3><p>将代码放入<code></code>内（主要不是单引号，是波浪线对应的键）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`代码`</span><br></pre></td></tr></table></figure></p><p><code>代码</code></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>代码放入\<figure class="highlight plain"><figcaption><span>内,在第一行后指定编程语言，也可以不指定</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```</span><br></pre></td></tr></table></figure></p><pre><code>代码块<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```</span><br></pre></td></tr></table></figure></code></pre><p>代码块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">### 高亮代码块中的关键字或方法</span><br><span class="line">使用“\```+语言名称” + \“```”进行标记,</span><br><span class="line">目前支持的语言有：</span><br><span class="line">1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</span><br></pre></td></tr></table></figure></p><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showDialog</span><span class="params">(Context context, View view)</span> </span>&#123;</span><br><span class="line">    AlertDialog alertDialogAddHomeLink = <span class="keyword">new</span> AlertDialog.Builder(context)</span><br><span class="line">            .setView(view).create();</span><br><span class="line">    Window window = alertDialogAddHomeLink.getWindow();</span><br><span class="line">    WindowManager.LayoutParams p = window.getAttributes();</span><br><span class="line">    p.privateFlags = WindowManager.LayoutParams.PRIVATE_FLAG_SHOW_FOR_ALL_USERS;</span><br><span class="line">    window.clearFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);</span><br><span class="line">    window.setAttributes(p);</span><br><span class="line">    alertDialogAddHomeLink.show();</span><br></pre></td></tr></table></figure></code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">```Java</span><br><span class="line">    public static void showDialog(Context context, View view) &#123;</span><br><span class="line">        AlertDialog alertDialogAddHomeLink = new AlertDialog.Builder(context)</span><br><span class="line">                .setView(view).create();</span><br><span class="line">        Window window = alertDialogAddHomeLink.getWindow();</span><br><span class="line">        WindowManager.LayoutParams p = window.getAttributes();</span><br><span class="line">        p.privateFlags = WindowManager.LayoutParams.PRIVATE_FLAG_SHOW_FOR_ALL_USERS;</span><br><span class="line">        window.clearFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);</span><br><span class="line">        window.setAttributes(p);</span><br><span class="line">        alertDialogAddHomeLink.show();</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="简单引用"><a href="#简单引用" class="headerlink" title="简单引用"></a>简单引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;要引用的内容</span><br></pre></td></tr></table></figure><blockquote><p>要引用的内容</p></blockquote><h3 id="引用嵌套"><a href="#引用嵌套" class="headerlink" title="引用嵌套"></a>引用嵌套</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;第一层内容</span><br><span class="line">第一层内容</span><br><span class="line">&gt;&gt;第二层内容</span><br><span class="line">第二层内容</span><br></pre></td></tr></table></figure><blockquote><p>第一层内容<br>第一层内容</p><blockquote><p>第二层内容<br>第二层内容</p></blockquote></blockquote><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注释---&gt;</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>转义字符为\，转义的有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">\\ 反斜杠</span><br><span class="line"></span><br><span class="line">\` 反引号</span><br><span class="line"></span><br><span class="line">\* 星号</span><br><span class="line"></span><br><span class="line">\_ 下划线</span><br><span class="line"></span><br><span class="line">\&#123;\&#125; 大括号</span><br><span class="line"></span><br><span class="line">\[\] 中括号</span><br><span class="line"></span><br><span class="line">\(\) 小括号</span><br><span class="line"></span><br><span class="line">\# 井号</span><br><span class="line"></span><br><span class="line">\+ 加号</span><br><span class="line"></span><br><span class="line">\- 减号</span><br><span class="line"></span><br><span class="line">\. 英文句号</span><br><span class="line"></span><br><span class="line">\! 感叹号</span><br></pre></td></tr></table></figure></p><p>\ 反斜杠</p><p>` 反引号</p><p>* 星号</p><p>_ 下划线</p><p>{} 大括号</p><p>[] 中括号</p><p>() 小括号</p><p># 井号</p><p>+ 加号</p><p>- 减号</p><p>. 英文句号</p><p>! 感叹号</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>行首和行尾的竖线可以省略</p><h3 id="形式一：默认形式"><a href="#形式一：默认形式" class="headerlink" title="形式一：默认形式"></a>形式一：默认形式</h3><p>文字默认居左<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|---|---|</span><br><span class="line">|内容内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>内容内容</td><td>内容</td><td>内容</td></tr><tr><td>内容</td><td>内容</td><td>内容</td></tr><tr><td>内容</td><td>内容</td><td>内容</td></tr></tbody></table><h3 id="形式二：内容居右"><a href="#形式二：内容居右" class="headerlink" title="形式二：内容居右"></a>形式二：内容居右</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---:|---|---|</span><br><span class="line">|内容内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:right">表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td style="text-align:right">内容内容</td><td>内容</td><td>内容</td></tr><tr><td style="text-align:right">内容</td><td>内容</td><td>内容</td></tr><tr><td style="text-align:right">内容</td><td>内容</td><td>内容</td></tr></tbody></table><h3 id="形式三：内容居中"><a href="#形式三：内容居中" class="headerlink" title="形式三：内容居中"></a>形式三：内容居中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|:---:|---|---|</span><br><span class="line">|内容内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br><span class="line">|内容|内容|内容|</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td style="text-align:center">内容内容</td><td>内容</td><td>内容</td></tr><tr><td style="text-align:center">内容</td><td>内容</td><td>内容</td></tr><tr><td style="text-align:center">内容</td><td>内容</td><td>内容</td></tr></tbody></table><h2 id="字体、字号、颜色"><a href="#字体、字号、颜色" class="headerlink" title="字体、字号、颜色"></a>字体、字号、颜色</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=#0099ff size=12 face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;</span><br><span class="line">&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;</span><br><span class="line">&lt;font color=gray size=5&gt;gray&lt;/font&gt;</span><br></pre></td></tr></table></figure><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="12" face="黑体">黑体</font><br><font color="#00ffff" size="3">null</font><br><font color="gray" size="5">gray</font><hr><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><hr><h2 id="生成目录"><a href="#生成目录" class="headerlink" title="生成目录"></a>生成目录</h2><p>使用[toc]生成目录，但是有些编辑器不支持，比如简书</p><p>注：想在那个位置生成目录，就写在哪个位置，一般在文正的开头。</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>使用 [^keyword] 表示注脚。</p><p>这里是脚注[^n]<br>[^n]: 这里是脚注的内容</p><p>注：关于注脚好像每个编辑器表示方式会有所不同</p><h2 id="待办列表"><a href="#待办列表" class="headerlink" title="待办列表"></a>待办列表</h2><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 起床</span><br><span class="line">- [ ] 吃早点</span><br><span class="line">- [x] 已完成任务</span><br></pre></td></tr></table></figure></p><ul><li style="list-style: none"><input type="checkbox"> 起床</li><li style="list-style: none"><input type="checkbox"> 吃早点</li><li style="list-style: none"><input type="checkbox" checked> 已完成任务</li></ul><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><h3 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end: End</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end: End</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">```flow </span><br><span class="line">st=&gt;start: 开始 </span><br><span class="line">e=&gt;end: 登录 </span><br><span class="line">io1=&gt;inputoutput: 输入用户名密码 </span><br><span class="line">sub1=&gt;subroutine: 数据库查询子类 </span><br><span class="line">cond=&gt;condition: 是否有此用户 </span><br><span class="line">cond2=&gt;condition: 密码是否正确 </span><br><span class="line">op=&gt;operation: 读入用户信息</span><br><span class="line"></span><br><span class="line">st-&gt;io1-&gt;sub1-&gt;cond </span><br><span class="line">cond(yes,right)-&gt;cond2 </span><br><span class="line">cond(no)-&gt;io1(right) </span><br><span class="line">cond2(yes,right)-&gt;op-&gt;e </span><br><span class="line">cond2(no)-&gt;io1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```flow </span><br><span class="line">st=&gt;start: 开始 </span><br><span class="line">e=&gt;end: 登录 </span><br><span class="line">io1=&gt;inputoutput: 输入用户名密码 </span><br><span class="line">sub1=&gt;subroutine: 数据库查询子类 </span><br><span class="line">cond=&gt;condition: 是否有此用户 </span><br><span class="line">cond2=&gt;condition: 密码是否正确 </span><br><span class="line">op=&gt;operation: 读入用户信息</span><br><span class="line"></span><br><span class="line">st-&gt;io1-&gt;sub1-&gt;cond </span><br><span class="line">cond(yes,right)-&gt;cond2 </span><br><span class="line">cond(no)-&gt;io1(right) </span><br><span class="line">cond2(yes,right)-&gt;op-&gt;e </span><br><span class="line">cond2(no)-&gt;io1</span><br></pre></td></tr></table></figure><ul><li><p>流程图代码分两块，上面一块是创建你的流程（创建元素），然后隔一行，创建流程的走向(连接元素)</p></li><li><p>创建流程（元素）：tag=&gt;type: content:&gt;url</p><ul><li>tag 是流程图中的标签，在第二段连接元素时会用到。名称可以任意，一般为流程的英文缩写和数字的组合。</li><li>type 用来确定标签的类型，=&gt;后面表示类型。由于标签的名称可以任意指定，所以要依赖type来确定标签的类型</li><li>标签有6种类型：start end operation subroutine condition inputoutput</li><li>content 是流程图文本框中的描述内容，: 后面表示内容，中英文均可。特别注意，冒号与文本之间一定要有个空格</li><li>url是一个连接，与框框中的文本相绑定，:&gt;后面就是对应的 url 链接，点击文本时可以通过链接跳转到 url 指定页面</li></ul></li><li>指向流程(连接元素)：标识（类别）-&gt;下一个标识<ul><li>使用 -&gt; 来连接两个元素</li><li>对于condition类型，有yes和no两个分支，如示例中的cond(yes)和cond(no)</li><li>每个元素可以制定分支走向，默认向下，也可以用right指向右边，如示例中cond2(yes,right)。<br>Created with Raphaël 2.1.4开始输入用户名密码数据库查询子类是否有此用户密码是否正确读入用户信息登录yesnoyesno</li></ul></li></ul><p>流程图元素</p><ul><li>开始<br>st=&gt;start: 开始</li><li>操作<br>op1=&gt;operation: 操作、执行说明</li><li>条件<br>cond=&gt;condition: 确认？</li><li>子程序<br>sub1=&gt;subroutine: 子程序操作说明</li><li>用户输入或输出<br>io1=&gt;inputoutput: 输入密码</li><li>结束<br>e=&gt;end: 结束<h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2>时序图（Sequence Diagram）用于描述对象之间发送消息的时间顺序或显示多个对象之间的动态协作。时序图中的每条消息对应一个类操作或一个事件。如下所示：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">``` sequence</span><br><span class="line">客户端-&gt;打印机: 打印请求(id)</span><br><span class="line">打印机-&gt;数据库:请求数据(id)</span><br><span class="line">Note right of 数据库: 执行SQL获取数据</span><br><span class="line">数据库--&gt;打印机:返回数据信息</span><br><span class="line">Note right of 打印机:使用数据打印</span><br><span class="line">打印机--&gt;&gt;客户端:返回打印结果</span><br><span class="line">客户端-&gt;客户端:等待提取结果</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">``` sequence</span><br><span class="line">客户端-&gt;打印机: 打印请求(id)</span><br><span class="line">打印机-&gt;数据库:请求数据(id)</span><br><span class="line">Note right of 数据库: 执行SQL获取数据</span><br><span class="line">数据库--&gt;打印机:返回数据信息</span><br><span class="line">Note right of 打印机:使用数据打印</span><br><span class="line">打印机--&gt;&gt;客户端:返回打印结果</span><br><span class="line">客户端-&gt;客户端:等待提取结果</span><br></pre></td></tr></table></figure><p>注：Note right/left of 角色 用于定义消息显示的位置</p><p>###时序图元素<br>时序图主要有一下几个元素：角色，对象，生命线，激活器和消息</p><ol><li><p><strong>角色（Actor）</strong><br>任何主体都可以是角色，角色对外发布消息。示例中，客户端，打印机，数据库都是角色。</p></li><li><p><strong>对象(Object)</strong><br>对象代表时序图中的对象在交互中所扮演的角色，位于时序图顶部和对象代表类角色。有的时候可能有多个打印机 ，那么这些打印机都是同一角色的不同对象</p></li><li><p><strong>生命线(Lifeline)</strong><br>生命线代表时序图中的对象在一段时期内的存在。时序图中每个对象和底部中心都有一条垂直的线，这就是对象的生命线，对象间 的消息存在于两条虚线间。</p></li><li><p><strong>激活期(Activation)</strong><br>激活期代表时序图中的对象执行一项操作的时期，在时序图中每条生命线上的窄的矩形代表活动期。它可以被理解成C语言语义中一对花括号“{}”中的内容。csdn的Markdown中并没有这一举行，只能以右侧或左侧的注解来表示“` python</p></li><li><p><strong>消息(Message)</strong><br>消息是定义交互和协作中交换信息的类，用于对实体间的通信内容建模，信息用于在实体间传递信息。允许实体请求其他的服务，类角色通过发送和接受信息进行通信。</p></li></ol><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>$ 表示行内公式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$E=mc^2$</span><br></pre></td></tr></table></figure></p><p>行内公式$E=mc^2$</p><h3 id="整行公式"><a href="#整行公式" class="headerlink" title="整行公式"></a>整行公式</h3><p>\$\$表示整行公式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i=1&#125;^na_i=0$$</span><br></pre></td></tr></table></figure></p><p>$$\sum_{i=1}^na_i=0$$</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 一级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 二级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 三级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### 四级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##### 五级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###### 六级标题&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题&quot;&gt;&lt;/a&gt;四级标题&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题&quot;&gt;&lt;/a&gt;五级标题&lt;/h5&gt;&lt;h6 id=&quot;六级标题&quot;&gt;&lt;a href=&quot;#六级标题&quot; class=&quot;headerlink&quot; title=&quot;六级标题&quot;&gt;&lt;/a&gt;六级标题&lt;/h6&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://jnnjiang.github.io/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://jnnjiang.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>android字体详解</title>
    <link href="https://jnnjiang.github.io/2019/03/18/android/font/android-font.html"/>
    <id>https://jnnjiang.github.io/2019/03/18/android/font/android-font.html</id>
    <published>2019-03-18T02:04:09.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<p>最近了解了一下字体，发现彻底解释明白这件事情真的很不容易。</p><h2 id="android-fontWeight属性"><a href="#android-fontWeight属性" class="headerlink" title="android:fontWeight属性"></a>android:fontWeight属性</h2><p>值是int，范围是1~1000，系统默认字体的weight是400<br>常用属性值和<code>通常</code>的名字对应关系如下<br>| Value | Common weight name |<br>|——-|——————–|<br>|100    |thin<br>|200    |Extra Light(Ultra Light)<br>|300    |Light<br>|400    |Normal(Regular、Book、Roman)<br>|500    |Medium<br>|600    |Semi Bold(Demi Bold)<br>|700    |Bold<br>|800    |Extra Bold(Ultra Bold)<br>|900    |Black (Heavy)</p><p>注：为什么说是通常呢？因为在有些字库下是有差异的，比如在Adobe Typekit字库中对字重描述的划分列表中，它列出Heavy指的是800而不是900。另外，在我们日常使用的Photoshop和Sketch里面，Ultra Light是100，而Thin是200。<br><a id="more"></a></p><p>css中还有bolder、lighter<br>bolder、lighter表示其字重值是基于从其父元素继承而来的字重计算所得的，与normal、bold所代表的字重并无关系。<br>其值通常是根据下表计算而得的：<br>|继承值|bolder所代表的字重|lighter所代表的字种|<br>|：—：|：—：|：—：|<br>|100|400|100|<br>|200|400|100|<br>|300|400|100|<br>|400|700|100|<br>|500|700|100|<br>|600|900|400|<br>|700|900|400|<br>|800|900|700|<br>|900|900|700|</p><h2 id="字体匹配算法"><a href="#字体匹配算法" class="headerlink" title="字体匹配算法"></a>字体匹配算法</h2><p>如果指定的font-weight数值，即所需的字重，能够在字体中找到对应的字重，那么就匹配为该对应的字重。否则，使用下面的规则来查找所需的字重并渲染：</p><ul><li>如果所需的字重小于400，则首先降序检查小于所需字重的各个字重，如仍然没有，则升序检查大于所需字重的各字重，直到找到匹配的字重。</li><li>如果所需的字重大于500，则首先升序检查大于所需字重的各字重，之后降序检查小于所需字重的各字重，直到找到匹配的字重。</li><li>如果所需的字重是400，那么会优先匹配500对应的字重，如仍没有，那么执行第一条所需字重小于400的规则。</li><li>如果所需的字重是500，则优先匹配400对应的字重，如仍没有，那么执行第二条所需字重大于500的规则。</li></ul><h2 id="衬线字体（serif）和无衬线字体（sans-serif）"><a href="#衬线字体（serif）和无衬线字体（sans-serif）" class="headerlink" title="衬线字体（serif）和无衬线字体（sans serif）"></a>衬线字体（serif）和无衬线字体（sans serif）</h2><p>西方国家字母体系分为两类：衬线字体（serif）以及无衬线体（sans serif）。<br>衬线字体，意思是在字的笔画开始、结束的地方有额外的装饰，而且笔画的粗细会有所不同。<br>无衬线体是无衬线字体，没有这些额外的装饰，而且笔画的粗细差不多。</p><h2 id="从Android-8-0-API-26-开始，支持通过资源文件的方式引用字库"><a href="#从Android-8-0-API-26-开始，支持通过资源文件的方式引用字库" class="headerlink" title="从Android 8.0(API 26)开始，支持通过资源文件的方式引用字库"></a>从Android 8.0(API 26)开始，支持通过资源文件的方式引用字库</h2><p>详见<a href="https://jnnjiang.github.io/2019/03/20/android/font/android-o-font-in-xml.html">android O 在xml文件中引用字体</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近了解了一下字体，发现彻底解释明白这件事情真的很不容易。&lt;/p&gt;
&lt;h2 id=&quot;android-fontWeight属性&quot;&gt;&lt;a href=&quot;#android-fontWeight属性&quot; class=&quot;headerlink&quot; title=&quot;android:fontWeight属性&quot;&gt;&lt;/a&gt;android:fontWeight属性&lt;/h2&gt;&lt;p&gt;值是int，范围是1~1000，系统默认字体的weight是400&lt;br&gt;常用属性值和&lt;code&gt;通常&lt;/code&gt;的名字对应关系如下&lt;br&gt;| Value | Common weight name |&lt;br&gt;|——-|——————–|&lt;br&gt;|100    |thin&lt;br&gt;|200    |Extra Light(Ultra Light)&lt;br&gt;|300    |Light&lt;br&gt;|400    |Normal(Regular、Book、Roman)&lt;br&gt;|500    |Medium&lt;br&gt;|600    |Semi Bold(Demi Bold)&lt;br&gt;|700    |Bold&lt;br&gt;|800    |Extra Bold(Ultra Bold)&lt;br&gt;|900    |Black (Heavy)&lt;/p&gt;
&lt;p&gt;注：为什么说是通常呢？因为在有些字库下是有差异的，比如在Adobe Typekit字库中对字重描述的划分列表中，它列出Heavy指的是800而不是900。另外，在我们日常使用的Photoshop和Sketch里面，Ultra Light是100，而Thin是200。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://jnnjiang.github.io/categories/android/"/>
    
      <category term="字体" scheme="https://jnnjiang.github.io/categories/android/font/"/>
    
    
  </entry>
  
  <entry>
    <title>git子项目错误汇总</title>
    <link href="https://jnnjiang.github.io/2019/01/17/git/git-submodule-errors.html"/>
    <id>https://jnnjiang.github.io/2019/01/17/git/git-submodule-errors.html</id>
    <published>2019-01-17T01:12:56.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="错误收集"><a href="#错误收集" class="headerlink" title="错误收集"></a>错误收集</h2><h3 id="clone代码报错-fatal-reference-is-not-a-tree-85e5c187f03d9c10889dfbddd8adf4d87af2c71f"><a href="#clone代码报错-fatal-reference-is-not-a-tree-85e5c187f03d9c10889dfbddd8adf4d87af2c71f" class="headerlink" title="clone代码报错-fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f"></a>clone代码报错-fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ git clone --recursive -b src https://github.com/jnnjiang/jnnjiang.github.io.git blog</span><br><span class="line">Cloning into &apos;blog6&apos;...</span><br><span class="line">remote: Enumerating objects: 803, done.</span><br><span class="line">remote: Counting objects: 100% (803/803), done.</span><br><span class="line">remote: Compressing objects: 100% (351/351), done.</span><br><span class="line">remote: Total 803 (delta 289), reused 763 (delta 251), pack-reused 0</span><br><span class="line">Receiving objects: 100% (803/803), 4.58 MiB | 661.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (289/289), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Submodule &apos;themes/next&apos; (https://github.com/jnnjiang/hexo-theme-next.git) registered for path &apos;themes/next&apos;</span><br><span class="line">Cloning into &apos;themes/next&apos;...</span><br><span class="line">remote: Enumerating objects: 1, done.</span><br><span class="line">remote: Counting objects: 100% (1/1), done.</span><br><span class="line">remote: Total 5364 (delta 0), reused 0 (delta 0), pack-reused 5363</span><br><span class="line">Receiving objects: 100% (5364/5364), 5.09 MiB | 812.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (3293/3293), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f</span><br><span class="line">Unable to checkout &apos;85e5c187f03d9c10889dfbddd8adf4d87af2c71f&apos; in submodule path &apos;themes/next&apos;</span><br></pre></td></tr></table></figure><a id="more"></a><p>原因还不是很清楚，解决办法：<br>去之前提交项目的根目录下，执行<code>git status</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cd blog</span><br><span class="line">$ git status</span><br><span class="line">On branch src</span><br><span class="line">Your branch is up-to-date with &apos;origin/src&apos;.</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">  (commit or discard the untracked or modified content in submodules)</span><br><span class="line"></span><br><span class="line">modified:   themes/next (new commits, untracked content)</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure></p><p>发现有untracked文件，执行<code>git diff</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git diff themes/next/</span><br><span class="line">diff --git a/themes/next b/themes/next</span><br><span class="line">index 85e5c18..f8281ed 160000</span><br><span class="line">--- a/themes/next</span><br><span class="line">+++ b/themes/next</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Subproject commit 85e5c187f03d9c10889dfbddd8adf4d87af2c71f</span><br><span class="line">+Subproject commit f8281ed747fe94399fd8dbf4d66d6ac5b7faf8ff-dirty</span><br></pre></td></tr></table></figure></p><p>发现确实有一个<code>85e5c187f03d9c10889dfbddd8adf4d87af2c71f</code>提交。而<code>f8281ed747fe94399fd8dbf4d66d6ac5b7faf8ff</code>对应的是现在github上项目的<code>HEAD</code>。<br>执行下面的命令，将这个改动提交上去<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add themes/next/</span><br><span class="line">$ git commit -m &quot;add submodule changes&quot;</span><br><span class="line">$ git push origin src:src</span><br></pre></td></tr></table></figure></p><p>此时再重新clone项目就不会报错了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git clone --recursive -b src https://github.com/jnnjiang/jnnjiang.github.io.git blog7</span><br><span class="line">Cloning into &apos;blog7&apos;...</span><br><span class="line">remote: Enumerating objects: 806, done.</span><br><span class="line">remote: Counting objects: 100% (806/806), done.</span><br><span class="line">remote: Compressing objects: 100% (354/354), done.</span><br><span class="line">remote: Total 806 (delta 290), reused 765 (delta 251), pack-reused 0</span><br><span class="line">Receiving objects: 100% (806/806), 4.58 MiB | 938.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (290/290), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Submodule &apos;themes/next&apos; (https://github.com/jnnjiang/hexo-theme-next.git) registered for path &apos;themes/next&apos;</span><br><span class="line">Cloning into &apos;themes/next&apos;...</span><br><span class="line">remote: Enumerating objects: 1, done.</span><br><span class="line">remote: Counting objects: 100% (1/1), done.</span><br><span class="line">remote: Total 5364 (delta 0), reused 0 (delta 0), pack-reused 5363</span><br><span class="line">Receiving objects: 100% (5364/5364), 5.09 MiB | 1.01 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (3293/3293), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line">Submodule path &apos;themes/next&apos;: checked out &apos;f8281ed747fe94399fd8dbf4d66d6ac5b7faf8ff&apos;</span><br></pre></td></tr></table></figure></p><h3 id="git-status时一直提示有未跟踪的文件-new-commits-untracked-content"><a href="#git-status时一直提示有未跟踪的文件-new-commits-untracked-content" class="headerlink" title="git status时一直提示有未跟踪的文件:(new commits, untracked content)"></a><code>git status</code>时一直提示有未跟踪的文件:(new commits, untracked content)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch src</span><br><span class="line">Your branch is up-to-date with &apos;origin/src&apos;.</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">  (commit or discard the untracked or modified content in submodules)</span><br><span class="line"></span><br><span class="line">modified:   themes/next (new commits, untracked content)</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure><p>进入子项目<code>themes/next</code>发现文件夹下有一个patch<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes/next</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">0001-change-styles-of-pre-article-and-next-article.patch</span><br></pre></td></tr></table></figure></p><p>删除就没问题了。</p><p>针对子项目中未跟踪的文件，可以分两种情况处理：</p><ol><li>如果项目目中的文件是不需要提交的，则删除即可。</li><li>如果是需要提交的的，则先在子项目提交，再在主项目提交。</li></ol><p>然后在主项目上执行<code>git status</code>会发现，没有那个提示了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch src</span><br><span class="line">Your branch is ahead of &apos;origin/src&apos; by 2 commits.</span><br><span class="line">  (use &quot;git push&quot; to publish your local commits)</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;错误收集&quot;&gt;&lt;a href=&quot;#错误收集&quot; class=&quot;headerlink&quot; title=&quot;错误收集&quot;&gt;&lt;/a&gt;错误收集&lt;/h2&gt;&lt;h3 id=&quot;clone代码报错-fatal-reference-is-not-a-tree-85e5c187f03d9c10889dfbddd8adf4d87af2c71f&quot;&gt;&lt;a href=&quot;#clone代码报错-fatal-reference-is-not-a-tree-85e5c187f03d9c10889dfbddd8adf4d87af2c71f&quot; class=&quot;headerlink&quot; title=&quot;clone代码报错-fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f&quot;&gt;&lt;/a&gt;clone代码报错-fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone --recursive -b src https://github.com/jnnjiang/jnnjiang.github.io.git blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cloning into &amp;apos;blog6&amp;apos;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Enumerating objects: 803, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Counting objects: 100% (803/803), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Compressing objects: 100% (351/351), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Total 803 (delta 289), reused 763 (delta 251), pack-reused 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Receiving objects: 100% (803/803), 4.58 MiB | 661.00 KiB/s, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Resolving deltas: 100% (289/289), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking connectivity... done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Submodule &amp;apos;themes/next&amp;apos; (https://github.com/jnnjiang/hexo-theme-next.git) registered for path &amp;apos;themes/next&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cloning into &amp;apos;themes/next&amp;apos;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Enumerating objects: 1, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Counting objects: 100% (1/1), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Total 5364 (delta 0), reused 0 (delta 0), pack-reused 5363&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Receiving objects: 100% (5364/5364), 5.09 MiB | 812.00 KiB/s, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Resolving deltas: 100% (3293/3293), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking connectivity... done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: reference is not a tree: 85e5c187f03d9c10889dfbddd8adf4d87af2c71f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Unable to checkout &amp;apos;85e5c187f03d9c10889dfbddd8adf4d87af2c71f&amp;apos; in submodule path &amp;apos;themes/next&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="git" scheme="https://jnnjiang.github.io/categories/git/"/>
    
    
      <category term="git子项目" scheme="https://jnnjiang.github.io/tags/git-submodule/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 多个终端同步开发的问题</title>
    <link href="https://jnnjiang.github.io/2019/01/16/uncategorized/hexo-multi-peers.html"/>
    <id>https://jnnjiang.github.io/2019/01/16/uncategorized/hexo-multi-peers.html</id>
    <published>2019-01-16T09:44:52.000Z</published>
    <updated>2019-10-09T07:53:32.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一端"><a href="#一端" class="headerlink" title="一端"></a>一端</h2><p>如果想在多个终端上开发博客，并且还要保持代码同步，可以按照一下步骤操作<br>1.在已经搭建好Hexo环境的本地项目上创建分支<code>src</code>，需要先在跟目录下执行<code>git init</code>，把本地代码变成一个git项目。默认是在<code>master</code>分支，执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b src</span><br></pre></td></tr></table></figure></p><p>将项目切换到src分支，因为我们在执行<code>hexo d</code>的时候，默认是将public文件夹下的内容提交到git项目的master分支上。<br><a id="more"></a><br>2.将项目提交到github上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin src:src</span><br></pre></td></tr></table></figure></p><p>3.登录github，就会在项目下看到我们刚才的提交记录。至此，项目的源码就得到保存了。</p><h2 id="另一端"><a href="#另一端" class="headerlink" title="另一端"></a>另一端</h2><p>4.在另一端同步代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b src 项目地址</span><br></pre></td></tr></table></figure></p><p>5.安装必要的依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure></p><p>6.然后就可以编辑同步博客内容了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>7.提交源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin src:src</span><br></pre></td></tr></table></figure></p><h2 id="其他端"><a href="#其他端" class="headerlink" title="其他端"></a>其他端</h2><p>操作方式同<code>另一端</code></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>1.如果电脑上之前配置了git账户，那么执行<code>hexo d</code>时，默认会使用已经配置的git的账户。关于<code>.deploy</code>中git账户的配置，可以参见<a href="/2019/01/14/hexo/hexo+github.html" title="hexo+github搭建自己的博客">hexo+github搭建自己的博客</a>中<code>配置.deploy中git账户</code>一节。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一端&quot;&gt;&lt;a href=&quot;#一端&quot; class=&quot;headerlink&quot; title=&quot;一端&quot;&gt;&lt;/a&gt;一端&lt;/h2&gt;&lt;p&gt;如果想在多个终端上开发博客，并且还要保持代码同步，可以按照一下步骤操作&lt;br&gt;1.在已经搭建好Hexo环境的本地项目上创建分支&lt;code&gt;src&lt;/code&gt;，需要先在跟目录下执行&lt;code&gt;git init&lt;/code&gt;，把本地代码变成一个git项目。默认是在&lt;code&gt;master&lt;/code&gt;分支，执行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b src&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将项目切换到src分支，因为我们在执行&lt;code&gt;hexo d&lt;/code&gt;的时候，默认是将public文件夹下的内容提交到git项目的master分支上。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo配置-打造自己的博客（基于landscape主题）</title>
    <link href="https://jnnjiang.github.io/2019/01/14/hexo/hexo+config.html"/>
    <id>https://jnnjiang.github.io/2019/01/14/hexo/hexo+config.html</id>
    <published>2019-01-14T08:15:43.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>_config.yml 采用YAML语法格式，<a href="https://my.oschina.net/u/1861837/blog/526142?p=&lt;!--￼37--" target="_blank" rel="noopener">具体语法自行学习</a> 。<br>_config.yml 文件中的内容，并对主要参数做简单的介绍:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Hexo #网站标题</span><br><span class="line">subtitle:   #网站副标题</span><br><span class="line">description:  #网站描述</span><br><span class="line">author: John Doe  #作者</span><br><span class="line">language:    #语言</span><br><span class="line">timezone:    #网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://yoursite.com   #你的站点Url</span><br><span class="line">root: /                       #站点的根目录</span><br><span class="line">permalink: :year/:month/:day/:title/   #文章的 永久链接 格式   </span><br><span class="line">permalink_defaults:    #永久链接中各部分的默认值</span><br><span class="line"></span><br><span class="line"># Directory   </span><br><span class="line">source_dir: source   #资源文件夹，这个文件夹用来存放内容</span><br><span class="line">public_dir: public     #公共文件夹，这个文件夹用于存放生成的站点文件。</span><br><span class="line">tag_dir: tags         # 标签文件夹     </span><br><span class="line">archive_dir: archives    #归档文件夹</span><br><span class="line">category_dir: categories      #分类文件夹</span><br><span class="line">code_dir: downloads/code     #Include code 文件夹</span><br><span class="line">i18n_dir: :lang                #国际化（i18n）文件夹</span><br><span class="line">skip_render:                #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。    </span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # 新文章的文件名称</span><br><span class="line">default_layout: post     #预设布局</span><br><span class="line">titlecase: false # 把标题转换为 title case</span><br><span class="line">external_link: true # 在新标签中打开链接</span><br><span class="line">filename_case: 0     #把文件名称转换为 (1) 小写或 (2) 大写</span><br><span class="line">render_drafts: false  #是否显示草稿</span><br><span class="line">post_asset_folder: false  #是否启动 Asset 文件夹</span><br><span class="line">relative_link: false      #把链接改为与根目录的相对位址    </span><br><span class="line">future: true                #显示未来的文章</span><br><span class="line">highlight:                    #内容中代码块的设置    </span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:          #分类别名</span><br><span class="line">tag_map:            #标签别名</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD         #日期格式</span><br><span class="line">time_format: HH:mm:ss        #时间格式    </span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10    #分页数量</span><br><span class="line">pagination_dir: page  </span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape   #主题名称</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">#  部署部分的设置</span><br><span class="line">deploy:     </span><br><span class="line">  type:  #类型，常用的git</span><br></pre></td></tr></table></figure></p><h2 id="修改Banner图"><a href="#修改Banner图" class="headerlink" title="修改Banner图"></a>修改Banner图</h2><p>替换themes/landscape/source/css/images/banner.jpg下的图片即可。<br>注意命名一定要是<code>banner.jpg</code></p><a id="more"></a><h2 id="修改标题、副标题、博客描述、语言"><a href="#修改标题、副标题、博客描述、语言" class="headerlink" title="修改标题、副标题、博客描述、语言"></a>修改标题、副标题、博客描述、语言</h2><p>修改根目录下_config.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Michelle&apos;s Home</span><br><span class="line">subtitle: 纳纳的小窝</span><br><span class="line">description: 学习笔记、工作心得</span><br><span class="line">keywords:</span><br><span class="line">author: 江纳纳</span><br><span class="line">language: zh-CN //必须和主题中languages包中文件名相同</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><p>修改之后：<br><img src="http://wx4.sinaimg.cn/small/94805fably1g193rqm684j20iv05s435.jpg" alt></p><h2 id="对source文件夹下文章md文件分类"><a href="#对source文件夹下文章md文件分类" class="headerlink" title="对source文件夹下文章md文件分类"></a>对source文件夹下文章md文件分类</h2><p>我的是按月归档的。操作步骤如下：<br>1.修改_config.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year/:month/:title.md</span><br></pre></td></tr></table></figure></p><p>2.修改文章模版，增加 permalink一项就好了。文章的模版在scaffolds/post.md，内容修改如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">permalink: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line">toc: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>而我们使用<code>hexo new post [title]</code>创建文章的时候，应注意把标题里的空格换为<code>-</code>。<br><a href="https://blog.csdn.net/maosidiaoxian/article/details/85220394" target="_blank" rel="noopener">参考链接</a></p><h2 id="给文章设置目录"><a href="#给文章设置目录" class="headerlink" title="给文章设置目录"></a>给文章设置目录</h2><p>1.修改article.ejs<br>路径：themes/landscape/layout/_partial/article.ejs<br>修改前：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;</span><br><span class="line">      &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;</span><br><span class="line">        &lt;%- post.excerpt %&gt;</span><br><span class="line">        &lt;% if (theme.excerpt_link)&#123; %&gt;</span><br><span class="line">          &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;!-- Table of Contents --&gt;</span><br><span class="line">        &lt;%- post.content %&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;</span><br><span class="line">      &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;</span><br><span class="line">        &lt;%- post.excerpt %&gt;</span><br><span class="line">        &lt;% if (theme.excerpt_link)&#123; %&gt;</span><br><span class="line">          &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;!-- 文章目录 --&gt;</span><br><span class="line">        &lt;% if(!index &amp;&amp; post.toc)&#123; %&gt; //!index:表示主页不显示 post.toc表示Font-Formatter中设置了toc</span><br><span class="line">          &lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt;</span><br><span class="line">            &lt;strong class=&quot;toc-title&quot;&gt;目录&lt;/strong&gt;</span><br><span class="line">            &lt;%- toc(post.content,&#123;list_number:false&#125;) %&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">         &lt;% &#125; %&gt;</span><br><span class="line">        &lt;!-- Table of Contents --&gt;</span><br><span class="line">        &lt;%- post.content %&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>2.设置目录的样式<br>文件路径：themes/landscape/source/css/_partial/article.styl，在末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/*toc*/</span><br><span class="line">.toc-article</span><br><span class="line">  background #eee</span><br><span class="line">  border 1px solid #bbb</span><br><span class="line">  border-radius 3px</span><br><span class="line">  margin 1.5em 0 0.3em 0</span><br><span class="line">  padding 1.2em 1em 0 1em</span><br><span class="line">  max-width 28%</span><br><span class="line">.toc-title</span><br><span class="line">  font-size 120%</span><br><span class="line">#toc</span><br><span class="line">  line-height 1em</span><br><span class="line">  font-size 0.9em</span><br><span class="line">  /*float right*/ //该属性的作用是使目录悬浮到右侧，注释掉之后，目录默认显示在标题和内容之间</span><br><span class="line">  .toc</span><br><span class="line">    padding 0</span><br><span class="line">    margin 1em</span><br><span class="line">    line-height 1.8em</span><br><span class="line">    li</span><br><span class="line">      list-style-type none</span><br><span class="line">  .toc-child </span><br><span class="line">    margin-left 1em</span><br></pre></td></tr></table></figure></p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><h3 id="远程图片"><a href="#远程图片" class="headerlink" title="远程图片"></a>远程图片</h3><p>将图片上传到某个远程服务器上，然后通过引用图片地址的方式加载图片，引用方式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://b-ssl.duitang.com/uploads/item/201411/07/20141107164412_v284V.thumb.1900_0.jpeg)</span><br></pre></td></tr></table></figure></p><p><img src="https://b-ssl.duitang.com/uploads/item/201411/07/20141107164412_v284V.thumb.1900_0.jpeg" alt><br>注：这是markdown默认的引用方式</p><p>优点：引用方便，且兼容性好<br>缺点：依赖于网络，加载速度可能受影响</p><h3 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h3><p>加载本地图片有两种方式：</p><h4 id="在source下面创建一个images-把图片都放到里面，通过如下方式引用"><a href="#在source下面创建一个images-把图片都放到里面，通过如下方式引用" class="headerlink" title="在source下面创建一个images 把图片都放到里面，通过如下方式引用"></a>在source下面创建一个images 把图片都放到里面，通过如下方式引用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/images/hexo-image.jpeg)</span><br></pre></td></tr></table></figure><h4 id="在source-posts-下生成和文件名相同的文件夹"><a href="#在source-posts-下生成和文件名相同的文件夹" class="headerlink" title="在source/_posts/下生成和文件名相同的文件夹"></a>在source/_posts/下生成和文件名相同的文件夹</h4><p>step1：<br>将根目录下_config.yml中有<font color="ff0000">post_asset_folder: true</font> 如果是flase 改成true<br>step2:新建文件insert-image<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;insert-image&quot;</span><br></pre></td></tr></table></figure></p><p>此时会在source/_posts/目录下生成和<code>insert-image</code>同名的文件夹。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|--source</span><br><span class="line">    |--_posts</span><br><span class="line">        |--insert-image</span><br><span class="line">        |--insert-image.md</span><br></pre></td></tr></table></figure></p><p>将图片放入该文件夹即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|--source</span><br><span class="line">    |--_posts</span><br><span class="line">        |--insert-image</span><br><span class="line">            |--hexo-image.jpeg</span><br><span class="line">        |--insert-image.md</span><br></pre></td></tr></table></figure></p><p>引用方式一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](hexo-image.jpeg)</span><br></pre></td></tr></table></figure></p><p>注：括号内只需要填入文件名即可。</p><p>引用方式二：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img hexo-image.jpeg image %&#125;</span><br></pre></td></tr></table></figure></p><p>注：引用方式二是hexo引擎所支持的方式，并不是markdown语法。</p><h2 id="修改menu，添加关于"><a href="#修改menu，添加关于" class="headerlink" title="修改menu，添加关于"></a>修改menu，添加关于</h2><p>1.修改配置文件<code>_config.yml</code>，在菜单中添加<code>关于</code><br>路径：themes/landscape/_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Header</span><br><span class="line">menu:</span><br><span class="line">  首页: /</span><br><span class="line">  归档: /archives</span><br><span class="line">  #分类: /categories</span><br><span class="line">  #标签: /tags/</span><br><span class="line">  #随笔: /essay</span><br><span class="line">  关于: /about</span><br></pre></td></tr></table></figure></p><p>注意：menu下的菜单项默认是英文，因为我们已经设置了语言为中文，但是显示上并没有变化，这是因为，在landscape主题的语言包中，并没有适配菜单项，所以直接改成中文就可以了，不过这样对以后想适配多语言就比较麻烦了，只能算是当前的一个临时方案。</p><p>2.创建页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure></p><p>此时source目录下会生成about的文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|--source</span><br><span class="line">    |--_posts</span><br><span class="line">        |--about</span><br><span class="line">            |--index</span><br><span class="line">            |--index.md</span><br></pre></td></tr></table></figure></p><p>在<code>index.md</code>文件中添加关于的信息即可。</p><h2 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h2><p>1.修改模板<code>scaffolds/post.md</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">permalink: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>2.创建文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new test-category</span><br></pre></td></tr></table></figure></p><p>3.在font-formatter中添加分类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: test-category</span><br><span class="line">permalink: test-category</span><br><span class="line">date: 2019-01-14 15:55:55</span><br><span class="line">categories:</span><br><span class="line">    - hexo config</span><br></pre></td></tr></table></figure></p><p>注意：一篇文章只能属于一个分类，如果写成如下形式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: test-category</span><br><span class="line">permalink: test-category</span><br><span class="line">date: 2019-01-14 15:55:55</span><br><span class="line">categories:</span><br><span class="line">    - hexo config</span><br><span class="line">    - category config</span><br></pre></td></tr></table></figure></p><p>则该文章分类属于`/hexo config/category config/</p><h2 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h2><p>1.修改模板<code>scaffolds/post.md</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">permalink: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>2.创建文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new test-category</span><br></pre></td></tr></table></figure></p><p>3.在font-formatter中添加分类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: test-category</span><br><span class="line">permalink: test-category</span><br><span class="line">date: 2019-01-14 15:55:55</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">    - aa</span><br><span class="line">    - bb</span><br></pre></td></tr></table></figure></p><p>注意：虽然一篇文章只能属于一个分类，但是却可以有多个标签</p><h2 id="分类、标签显示文章数"><a href="#分类、标签显示文章数" class="headerlink" title="分类、标签显示文章数"></a>分类、标签显示文章数</h2><p>将<code>themes/landscape/_config.yml</code>中<code>show_count</code>参数设成true<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># widget behavior</span><br><span class="line">archive_type: &apos;monthly&apos;</span><br><span class="line">show_count: true</span><br></pre></td></tr></table></figure></p><p>修改前：<br><img src="http://wx4.sinaimg.cn/small/94805fably1g193s4bh8kj2095055web.jpg" alt><br>修改后：<br><img src="http://wx2.sinaimg.cn/small/94805fably1g193s0bbuxj208y04w3yd.jpg" alt></p><h2 id="给首页文件增加阅读全文"><a href="#给首页文件增加阅读全文" class="headerlink" title="给首页文件增加阅读全文"></a>给首页文件增加<code>阅读全文</code></h2><h3 id="方式一：使用-lt-more-gt-标记"><a href="#方式一：使用-lt-more-gt-标记" class="headerlink" title="方式一：使用&lt;!--more--&gt; 标记"></a>方式一：使用<code>&lt;!--more--&gt;</code> 标记</h3><p>这个只要在文章中加上<code>&lt;!--more--&gt;</code> 标记，该标记以后部分就不在显示了，只有展开全部才显示，这是hexo定义的。<br>这样每次添加这个标记有点麻烦，也可以自定义添加</p><h3 id="方式二：自定义添加"><a href="#方式二：自定义添加" class="headerlink" title="方式二：自定义添加"></a>方式二：自定义添加</h3><p>缺点：可能导致排版比较混乱<br>1.修改文件themes/landscape/layout/_partial/article.ejs<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;</span><br><span class="line">      &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;</span><br><span class="line">        &lt;%- post.excerpt %&gt;</span><br><span class="line">        &lt;% if (theme.excerpt_link)&#123; %&gt;</span><br><span class="line">          &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;!-- 文章目录 --&gt;</span><br><span class="line">        &lt;% if(!index &amp;&amp; post.toc)&#123; %&gt;</span><br><span class="line">          &lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt;</span><br><span class="line">            &lt;strong class=&quot;toc-title&quot;&gt;目录&lt;/strong&gt;</span><br><span class="line">            &lt;%- toc(post.content,&#123;list_number:true&#125;) %&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">         &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--摘要--&gt;</span><br><span class="line">        &lt;% var br = post.content.indexOf(&apos;\n&apos;) %&gt;</span><br><span class="line">        &lt;% if(br &lt; 0 || !index) &#123; %&gt;</span><br><span class="line">          &lt;%- post.content %&gt;</span><br><span class="line">        &lt;% &#125; else &#123; %&gt;</span><br><span class="line">          &lt;%- post.content.substring(0, br) %&gt;</span><br><span class="line">          &lt;% if (theme.excerpt_link) &#123; %&gt;</span><br><span class="line">            &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">              &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- post.path %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">          &lt;% &#125; %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- Table of Contents --&gt;</span><br><span class="line">        &lt;!--&lt;%- post.content %&gt;--&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>在class article-entry的else部分，增加摘要判断。</p><p>参考：<br><a href="https://blog.csdn.net/lewky_liu/article/details/81277337" target="_blank" rel="noopener">站点首页不显示文章全文</a><br><a href="https://twiceyuan.com/2014/05/25/hexo%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0readmore%E6%A0%87%E8%AE%B0/" target="_blank" rel="noopener">自动添加read more标记</a></p><h2 id="去掉首页文章日期后的分类信息"><a href="#去掉首页文章日期后的分类信息" class="headerlink" title="去掉首页文章日期后的分类信息"></a>去掉首页文章日期后的分类信息</h2><p>修改文件themes/landscape/layout/_partial/article.ejs<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;article-meta&quot;&gt;</span><br><span class="line">    &lt;%- partial(&apos;post/date&apos;, &#123;class_name: &apos;article-date&apos;, date_format: null&#125;) %&gt;</span><br><span class="line">    &lt;!--&lt;%- partial(&apos;post/category&apos;) %&gt;首页文章日期后面不显示分类--&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>默认：<br>修改后：<br><img src="http://wx4.sinaimg.cn/mw690/94805fably1g193rvhuxlj20po0a1mxq.jpg" alt></p><h2 id="关于，去掉文章中的日期"><a href="#关于，去掉文章中的日期" class="headerlink" title="关于，去掉文章中的日期"></a>关于，去掉文章中的日期</h2><p>Landscape主题，通过<code>hexo new page pagename</code>创建的页面，默认是显示日期的，但是像<code>关于</code>这种页面，我们并不希望它显示日期，那么就需要修改<code>article.ejs</code>，控制日期的显示<br>1.修改<code>scaffolds/page.md</code>，自定义变量<code>show_date</code>，将其值设为<code>false</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">show_date: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>2.修改<code>themes/landscape/layout/_partial/article.ejs</code>，具体如下：<br>修改前：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial(&apos;post/date&apos;, &#123;class_name: &apos;article-date&apos;, date_format: null&#125;) %&gt;</span><br></pre></td></tr></table></figure></p><p>修改后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(typeof(post.show_date)!= &quot;undefined&quot; &amp;&amp; !post.show_date)&#123; %&gt; //前一个条件是判断变量是否存在，因为之前写的文章里并没有这个变量，但是却是要显示日期的。</span><br><span class="line"></span><br><span class="line">      &lt;% &#125;else&#123; %&gt;</span><br><span class="line">        &lt;%- partial(&apos;post/date&apos;, &#123;class_name: &apos;article-date&apos;, date_format: null&#125;) %&gt;</span><br><span class="line">        &lt;!--&lt;%- partial(&apos;post/category&apos;) %&gt;首页文章日期后面不显示分类--&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p><h2 id="侧边栏显示分类"><a href="#侧边栏显示分类" class="headerlink" title="侧边栏显示分类"></a>侧边栏显示分类</h2><p>安装分类插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure></p><p>卸载可执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-category --save</span><br></pre></td></tr></table></figure></p><p>那样点击侧边栏的分类，将会提示找不到网页</p><h2 id="侧边栏显示标签"><a href="#侧边栏显示标签" class="headerlink" title="侧边栏显示标签"></a>侧边栏显示标签</h2><p>安装标签插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-tag --save</span><br></pre></td></tr></table></figure></p><h2 id="标签、分类别名"><a href="#标签、分类别名" class="headerlink" title="标签、分类别名"></a>标签、分类别名</h2><p>为了避免在分类或标签的url中产生中文，可以设置标签、分类的别名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">category_map: #冒号前面是分类名称，后面是访问路径</span><br><span class="line">  Android: Android</span><br><span class="line">  Java: Java</span><br><span class="line">  Hexo: Hexo</span><br><span class="line">  Web前端: Web</span><br><span class="line">  Linux: linux</span><br><span class="line">  Mac: mac</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tag_map:</span><br><span class="line">  Android Studio: android-studio</span><br><span class="line">  Android API: android-API</span><br><span class="line">  Android Widget: android-widget</span><br><span class="line">  Android 源码分析: android-source</span><br><span class="line">  JDK: JDK</span><br><span class="line">  Hexo建站: hexo-blog</span><br><span class="line">  Hexo 配置: hexo-config</span><br><span class="line">  Hexo 主题: hexo-themes</span><br><span class="line">  EJS教程: ejs</span><br><span class="line">  HTML5: html</span><br><span class="line">  CSS3: css </span><br><span class="line">  JS: js</span><br><span class="line">  git: git</span><br><span class="line">  常用工具: tools</span><br></pre></td></tr></table></figure><p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo配置-打造自己的博客（基于landscape主题）</span><br><span class="line">permalink: hexo+config</span><br><span class="line">toc: true</span><br><span class="line">date: 2019-01-14 16:15:43</span><br><span class="line">tags:</span><br><span class="line">  - Hexo 配置</span><br><span class="line">categories:</span><br><span class="line">  - Hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>这样在博客中显示的是<code>Hexo 配置</code>，在url中显示的是<code>hexo-config</code></p><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p><a href="https://segmentfault.com/a/1190000011917419" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011917419</a><br>这个应该是和主题相关的，好像需要自己写<br>待续。。。</p><h2 id="多语言支持"><a href="#多语言支持" class="headerlink" title="多语言支持"></a>多语言支持</h2><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><h2 id="config文件参数说明"><a href="#config文件参数说明" class="headerlink" title="config文件参数说明"></a>config文件参数说明</h2><h2 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h2><p>主题修改相关：<br><a href="https://www.jianshu.com/p/b96fd206571a" target="_blank" rel="noopener">https://www.jianshu.com/p/b96fd206571a</a></p><h2 id="在菜单中怎讲category和tags，网上查到的这几篇文章并不起作用，还需要再查查看"><a href="#在菜单中怎讲category和tags，网上查到的这几篇文章并不起作用，还需要再查查看" class="headerlink" title="在菜单中怎讲category和tags，网上查到的这几篇文章并不起作用，还需要再查查看"></a>在菜单中怎讲category和tags，网上查到的这几篇文章并不起作用，还需要再查查看</h2><p><a href="https://mrcxt.github.io/hexo/%E8%A7%A3%E5%86%B3hexo%E4%B8%8B%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">https://mrcxt.github.io/hexo/%E8%A7%A3%E5%86%B3hexo%E4%B8%8B%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</a><br><a href="https://blog.csdn.net/qq_32337109/article/details/78755662" target="_blank" rel="noopener">https://blog.csdn.net/qq_32337109/article/details/78755662</a><br><a href="https://www.jianshu.com/p/a6a72ed6aa2a" target="_blank" rel="noopener">https://www.jianshu.com/p/a6a72ed6aa2a</a></p><h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><p><a href="https://www.jianshu.com/p/b96fd206571a" target="_blank" rel="noopener">https://www.jianshu.com/p/b96fd206571a</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;config-yml&quot;&gt;&lt;a href=&quot;#config-yml&quot; class=&quot;headerlink&quot; title=&quot;_config.yml&quot;&gt;&lt;/a&gt;_config.yml&lt;/h2&gt;&lt;p&gt;_config.yml 采用YAML语法格式，&lt;a href=&quot;https://my.oschina.net/u/1861837/blog/526142?p=&amp;lt;!--￼37--&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;具体语法自行学习&lt;/a&gt; 。&lt;br&gt;_config.yml 文件中的内容，并对主要参数做简单的介绍:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Hexo Configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: Hexo #网站标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subtitle:   #网站副标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description:  #网站描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author: John Doe  #作者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;language:    #语言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone:    #网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## If your site is put in a subdirectory, set url as &amp;apos;http://yoursite.com/child&amp;apos; and root as &amp;apos;/child/&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url: http://yoursite.com   #你的站点Url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root: /                       #站点的根目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/   #文章的 永久链接 格式   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink_defaults:    #永久链接中各部分的默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Directory   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source_dir: source   #资源文件夹，这个文件夹用来存放内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public_dir: public     #公共文件夹，这个文件夹用于存放生成的站点文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_dir: tags         # 标签文件夹     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;archive_dir: archives    #归档文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_dir: categories      #分类文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;code_dir: downloads/code     #Include code 文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i18n_dir: :lang                #国际化（i18n）文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:                #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Writing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new_post_name: :title.md # 新文章的文件名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_layout: post     #预设布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;titlecase: false # 把标题转换为 title case&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external_link: true # 在新标签中打开链接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename_case: 0     #把文件名称转换为 (1) 小写或 (2) 大写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render_drafts: false  #是否显示草稿&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;post_asset_folder: false  #是否启动 Asset 文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relative_link: false      #把链接改为与根目录的相对位址    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;future: true                #显示未来的文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight:                    #内容中代码块的设置    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  line_number: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  auto_detect: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tab_replace:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Category &amp;amp; Tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_category: uncategorized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_map:          #分类别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_map:            #标签别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Date / Time format&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_format: YYYY-MM-DD         #日期格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time_format: HH:mm:ss        #时间格式    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Pagination&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;per_page: 10    #分页数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pagination_dir: page  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: landscape   #主题名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  部署部分的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type:  #类型，常用的git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;修改Banner图&quot;&gt;&lt;a href=&quot;#修改Banner图&quot; class=&quot;headerlink&quot; title=&quot;修改Banner图&quot;&gt;&lt;/a&gt;修改Banner图&lt;/h2&gt;&lt;p&gt;替换themes/landscape/source/css/images/banner.jpg下的图片即可。&lt;br&gt;注意命名一定要是&lt;code&gt;banner.jpg&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jnnjiang.github.io/categories/hexo/"/>
    
    
      <category term="Hexo 配置" scheme="https://jnnjiang.github.io/tags/hexo-config/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建自己的博客</title>
    <link href="https://jnnjiang.github.io/2019/01/14/hexo/hexo+github.html"/>
    <id>https://jnnjiang.github.io/2019/01/14/hexo/hexo+github.html</id>
    <published>2019-01-14T08:14:17.000Z</published>
    <updated>2019-10-09T08:07:18.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-简介"><a href="#hexo-简介" class="headerlink" title="hexo 简介"></a>hexo 简介</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a id="more"></a></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>1.<a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载nodejs</a>，最新版本10.15.0<br>简单说就是解压后，在bin文件夹中已经存在node以及npm，如果你进入到对应文件的中执行命令行一点问题都没有，不过不是全局的，所以将这个设置为全局就好了。<br>2.解压到当前目录（Download）<br>3.移动到指定目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv Download/node-v10.15.0 Tools/nodejs</span><br></pre></td></tr></table></figure></p><p>4.查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd Tool/nodejs/bin/</span><br><span class="line">$ ls</span><br><span class="line">$ ./node -v</span><br><span class="line">v10.15.0 // 我的版本</span><br></pre></td></tr></table></figure></p><p>5.建立软链接，使其全局有效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /home/nana/Tools/nodejs/bin/node /usr/local/bin/node</span><br><span class="line">$ ln -s /home/nana/Tools/nodejs/bin/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure></p><p>6.查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v10.15.0</span><br></pre></td></tr></table></figure></p><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><p>1.1.<a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载nodejs</a>，最新版本10.15.0<br>2.双击安装（默认会安装到/usr/local/bin/下）<br>3.查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v10.15.</span><br></pre></td></tr></table></figure></p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><h4 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h4><p>安装git：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></p><p>安装gitk:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gitk</span><br></pre></td></tr></table></figure></p><h4 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a>Mac</h4><p>虽然Mac自带git，但是为了方便后续用gitk查看代码提交情况，建议，用brew重新安装带gitk的git<br>1.如果没有安装brew，则需要先安装brew<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><p>2.查看系统git的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which git</span><br><span class="line">/usr/bin/git</span><br></pre></td></tr></table></figure></p><p>3.重新安装git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br><span class="line">$ brew install git</span><br></pre></td></tr></table></figure></p><p>4.再次查看git的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which git</span><br><span class="line">/usr/local/bin/git</span><br></pre></td></tr></table></figure></p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>安装完成后，执行下列命令，hexo将会在指定文件夹中新建所需要的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><p>这里尤其要中注意_config.yml文件，在这个文件里，可以配置网站的大部分参数。<br>配置详见<a href="/2019/01/14/hexo/hexo+config.html" title="hexo配置">hexo配置</a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="关联github"><a href="#关联github" class="headerlink" title="关联github"></a>关联github</h2><p>1.在github上创建项目，项目名为<code>{username}.github.io</code></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li><p>打开 Hexo 博客主配置文件 _config.yml，找到 deploy 属性，作如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: https://github.com/jnnjiang/jnnjiang.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></li><li><p>在<code>.deploy_git/</code>下配置github账号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;xxxx&quot;</span><br><span class="line">git config user.email &quot;xxxx&quot;</span><br></pre></td></tr></table></figure></li></ol><p>如果没有<code>.deploy_git/</code>文件也不用担心，执行下<code>hexo d</code>就会生成，执行的过程中会报错，不用担心，按照步骤2配置账号信息即可。</p><ol start="3"><li>执行如下命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><p>按照提示输入github账号的用户名和密码即可。</p><p>4.如果不想每次都输入用户名和密码，可以通过配置<code>./git/config</code>实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config credential.helper store</span><br></pre></td></tr></table></figure></p><p>然后部署时输入一次用户名和密码即可，此时会在user下面生成<code>.git-credentials</code>文件。<br>以后在部署就不用输入用户名和密码了。</p><h2 id="配置-deploy中git账户"><a href="#配置-deploy中git账户" class="headerlink" title="配置.deploy中git账户"></a>配置.deploy中git账户</h2><p>使用<code>hexo d</code>将代码推送到github时，如果之前配置过git账户，但是提交是想用新的git账户，而在没有执行<code>hexo d</code>之前，<code>.deploy</code>文件夹是不会生成的，这种情况下改怎么办呢？<br>1.执行<code>hexo d</code>推送一次代码。需要输入用户名和密码的时候，输入新账户的<br>2.登录github，将项目的默认分支设置成其他分支，然后删除master分支（blog默认是推送到master分支的，否则无法正常工作）<br>3.进入本地<code>.deploy/</code> 文件夹，配置新的git账户新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;xxx&quot;</span><br><span class="line">git config user.email &quot;xxx&quot;</span><br><span class="line">git config credential.hepler store</span><br></pre></td></tr></table></figure></p><p>4.将<code>.deploy/.git/config</code>文件保存到项目外<br>5.删除<code>.deploy/.git</code>文件夹<br>6.重新创建仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd .deploy</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>7.将第4步中保存的config文件复制到<code>.deploy/.git/</code>下。<br>8.执行<code>hexo d</code>重新推送代码，这时候会发现远端存在一个干净的分支，用户名也变成新的了<br>9.切换默认分支。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo-简介&quot;&gt;&lt;a href=&quot;#hexo-简介&quot; class=&quot;headerlink&quot; title=&quot;hexo 简介&quot;&gt;&lt;/a&gt;hexo 简介&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jnnjiang.github.io/categories/hexo/"/>
    
    
      <category term="Hexo建站" scheme="https://jnnjiang.github.io/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>Mac系统安装gitk</title>
    <link href="https://jnnjiang.github.io/2019/01/12/mac/gitk-mac.html"/>
    <id>https://jnnjiang.github.io/2019/01/12/mac/gitk-mac.html</id>
    <published>2019-01-12T03:55:46.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gitk-for-mac"><a href="#gitk-for-mac" class="headerlink" title="gitk for mac"></a>gitk for mac</h1><p>1.如果没有安装brew，则需要先安装brew<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2.由于系统自带的git中没有gitk，所以需要重新安装<br>    1)查看系统git的位置<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which git</span><br><span class="line">/usr/bin/git</span><br></pre></td></tr></table></figure></p><pre><code>2)重新安装git<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br><span class="line">$ brew install git</span><br></pre></td></tr></table></figure>3)再次查看git的位置<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which git</span><br><span class="line">/usr/local/bin/git</span><br></pre></td></tr></table></figure>安装成功</code></pre><p>3.在git项目中，执行<code>gitk</code>命令，就可以看到图形化界面了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;gitk-for-mac&quot;&gt;&lt;a href=&quot;#gitk-for-mac&quot; class=&quot;headerlink&quot; title=&quot;gitk for mac&quot;&gt;&lt;/a&gt;gitk for mac&lt;/h1&gt;&lt;p&gt;1.如果没有安装brew，则需要先安装brew&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://jnnjiang.github.io/categories/mac/"/>
    
    
      <category term="常用工具" scheme="https://jnnjiang.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jnnjiang.github.io/2019/01/11/hexo/hexo-hello-world.html"/>
    <id>https://jnnjiang.github.io/2019/01/11/hexo/hexo-hello-world.html</id>
    <published>2019-01-11T09:55:46.000Z</published>
    <updated>2019-10-09T05:53:48.197Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jnnjiang.github.io/categories/hexo/"/>
    
    
      <category term="Hexo建站" scheme="https://jnnjiang.github.io/tags/hexo-blog/"/>
    
  </entry>
  
</feed>
